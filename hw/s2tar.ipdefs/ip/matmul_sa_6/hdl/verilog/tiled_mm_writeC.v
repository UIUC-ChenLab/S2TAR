// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module tiled_mm_writeC (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_port_c_AWVALID,
        m_axi_port_c_AWREADY,
        m_axi_port_c_AWADDR,
        m_axi_port_c_AWID,
        m_axi_port_c_AWLEN,
        m_axi_port_c_AWSIZE,
        m_axi_port_c_AWBURST,
        m_axi_port_c_AWLOCK,
        m_axi_port_c_AWCACHE,
        m_axi_port_c_AWPROT,
        m_axi_port_c_AWQOS,
        m_axi_port_c_AWREGION,
        m_axi_port_c_AWUSER,
        m_axi_port_c_WVALID,
        m_axi_port_c_WREADY,
        m_axi_port_c_WDATA,
        m_axi_port_c_WSTRB,
        m_axi_port_c_WLAST,
        m_axi_port_c_WID,
        m_axi_port_c_WUSER,
        m_axi_port_c_ARVALID,
        m_axi_port_c_ARREADY,
        m_axi_port_c_ARADDR,
        m_axi_port_c_ARID,
        m_axi_port_c_ARLEN,
        m_axi_port_c_ARSIZE,
        m_axi_port_c_ARBURST,
        m_axi_port_c_ARLOCK,
        m_axi_port_c_ARCACHE,
        m_axi_port_c_ARPROT,
        m_axi_port_c_ARQOS,
        m_axi_port_c_ARREGION,
        m_axi_port_c_ARUSER,
        m_axi_port_c_RVALID,
        m_axi_port_c_RREADY,
        m_axi_port_c_RDATA,
        m_axi_port_c_RLAST,
        m_axi_port_c_RID,
        m_axi_port_c_RFIFONUM,
        m_axi_port_c_RUSER,
        m_axi_port_c_RRESP,
        m_axi_port_c_BVALID,
        m_axi_port_c_BREADY,
        m_axi_port_c_BRESP,
        m_axi_port_c_BID,
        m_axi_port_c_BUSER,
        out_r_dout,
        out_r_num_data_valid,
        out_r_fifo_cap,
        out_r_empty_n,
        out_r_read,
        Cstream_dout,
        Cstream_num_data_valid,
        Cstream_fifo_cap,
        Cstream_empty_n,
        Cstream_read,
        tn_dout,
        tn_num_data_valid,
        tn_fifo_cap,
        tn_empty_n,
        tn_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_port_c_AWVALID;
input   m_axi_port_c_AWREADY;
output  [63:0] m_axi_port_c_AWADDR;
output  [0:0] m_axi_port_c_AWID;
output  [31:0] m_axi_port_c_AWLEN;
output  [2:0] m_axi_port_c_AWSIZE;
output  [1:0] m_axi_port_c_AWBURST;
output  [1:0] m_axi_port_c_AWLOCK;
output  [3:0] m_axi_port_c_AWCACHE;
output  [2:0] m_axi_port_c_AWPROT;
output  [3:0] m_axi_port_c_AWQOS;
output  [3:0] m_axi_port_c_AWREGION;
output  [0:0] m_axi_port_c_AWUSER;
output   m_axi_port_c_WVALID;
input   m_axi_port_c_WREADY;
output  [7:0] m_axi_port_c_WDATA;
output  [0:0] m_axi_port_c_WSTRB;
output   m_axi_port_c_WLAST;
output  [0:0] m_axi_port_c_WID;
output  [0:0] m_axi_port_c_WUSER;
output   m_axi_port_c_ARVALID;
input   m_axi_port_c_ARREADY;
output  [63:0] m_axi_port_c_ARADDR;
output  [0:0] m_axi_port_c_ARID;
output  [31:0] m_axi_port_c_ARLEN;
output  [2:0] m_axi_port_c_ARSIZE;
output  [1:0] m_axi_port_c_ARBURST;
output  [1:0] m_axi_port_c_ARLOCK;
output  [3:0] m_axi_port_c_ARCACHE;
output  [2:0] m_axi_port_c_ARPROT;
output  [3:0] m_axi_port_c_ARQOS;
output  [3:0] m_axi_port_c_ARREGION;
output  [0:0] m_axi_port_c_ARUSER;
input   m_axi_port_c_RVALID;
output   m_axi_port_c_RREADY;
input  [7:0] m_axi_port_c_RDATA;
input   m_axi_port_c_RLAST;
input  [0:0] m_axi_port_c_RID;
input  [10:0] m_axi_port_c_RFIFONUM;
input  [0:0] m_axi_port_c_RUSER;
input  [1:0] m_axi_port_c_RRESP;
input   m_axi_port_c_BVALID;
output   m_axi_port_c_BREADY;
input  [1:0] m_axi_port_c_BRESP;
input  [0:0] m_axi_port_c_BID;
input  [0:0] m_axi_port_c_BUSER;
input  [63:0] out_r_dout;
input  [3:0] out_r_num_data_valid;
input  [3:0] out_r_fifo_cap;
input   out_r_empty_n;
output   out_r_read;
input  [7:0] Cstream_dout;
input  [2:0] Cstream_num_data_valid;
input  [2:0] Cstream_fifo_cap;
input   Cstream_empty_n;
output   Cstream_read;
input  [2:0] tn_dout;
input  [2:0] tn_num_data_valid;
input  [2:0] tn_fifo_cap;
input   tn_empty_n;
output   tn_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_port_c_AWVALID;
reg m_axi_port_c_WVALID;
reg m_axi_port_c_BREADY;
reg out_r_read;
reg Cstream_read;
reg tn_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_r_blk_n;
reg    tn_blk_n;
reg   [2:0] tn_read_reg_101;
reg    ap_block_state1;
reg   [63:0] out_read_reg_107;
wire   [10:0] mul15_fu_94_p2;
reg   [10:0] mul15_reg_112;
wire    ap_CS_fsm_state2;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_idle;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_ready;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWVALID;
wire   [63:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWADDR;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWID;
wire   [31:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWLEN;
wire   [2:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWSIZE;
wire   [1:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWBURST;
wire   [1:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWLOCK;
wire   [3:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWCACHE;
wire   [2:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWPROT;
wire   [3:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWQOS;
wire   [3:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWREGION;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWUSER;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WVALID;
wire   [7:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WDATA;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WSTRB;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WLAST;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WID;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WUSER;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARVALID;
wire   [63:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARADDR;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARID;
wire   [31:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARLEN;
wire   [2:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARSIZE;
wire   [1:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARBURST;
wire   [1:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARLOCK;
wire   [3:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARCACHE;
wire   [2:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARPROT;
wire   [3:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARQOS;
wire   [3:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARREGION;
wire   [0:0] grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARUSER;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_RREADY;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_BREADY;
wire    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_Cstream_read;
reg    grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [9:0] p_shl_fu_72_p3;
wire   [7:0] p_shl1_fu_83_p3;
wire   [10:0] p_shl_cast2_fu_79_p1;
wire   [10:0] p_shl1_cast3_fu_90_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start_reg = 1'b0;
end

tiled_mm_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start),
    .ap_done(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done),
    .ap_idle(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_idle),
    .ap_ready(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_ready),
    .m_axi_port_c_AWVALID(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWVALID),
    .m_axi_port_c_AWREADY(m_axi_port_c_AWREADY),
    .m_axi_port_c_AWADDR(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWADDR),
    .m_axi_port_c_AWID(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWID),
    .m_axi_port_c_AWLEN(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWLEN),
    .m_axi_port_c_AWSIZE(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWSIZE),
    .m_axi_port_c_AWBURST(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWBURST),
    .m_axi_port_c_AWLOCK(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWLOCK),
    .m_axi_port_c_AWCACHE(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWCACHE),
    .m_axi_port_c_AWPROT(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWPROT),
    .m_axi_port_c_AWQOS(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWQOS),
    .m_axi_port_c_AWREGION(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWREGION),
    .m_axi_port_c_AWUSER(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWUSER),
    .m_axi_port_c_WVALID(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WVALID),
    .m_axi_port_c_WREADY(m_axi_port_c_WREADY),
    .m_axi_port_c_WDATA(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WDATA),
    .m_axi_port_c_WSTRB(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WSTRB),
    .m_axi_port_c_WLAST(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WLAST),
    .m_axi_port_c_WID(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WID),
    .m_axi_port_c_WUSER(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WUSER),
    .m_axi_port_c_ARVALID(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARVALID),
    .m_axi_port_c_ARREADY(1'b0),
    .m_axi_port_c_ARADDR(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARADDR),
    .m_axi_port_c_ARID(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARID),
    .m_axi_port_c_ARLEN(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARLEN),
    .m_axi_port_c_ARSIZE(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARSIZE),
    .m_axi_port_c_ARBURST(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARBURST),
    .m_axi_port_c_ARLOCK(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARLOCK),
    .m_axi_port_c_ARCACHE(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARCACHE),
    .m_axi_port_c_ARPROT(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARPROT),
    .m_axi_port_c_ARQOS(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARQOS),
    .m_axi_port_c_ARREGION(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARREGION),
    .m_axi_port_c_ARUSER(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_ARUSER),
    .m_axi_port_c_RVALID(1'b0),
    .m_axi_port_c_RREADY(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_RREADY),
    .m_axi_port_c_RDATA(8'd0),
    .m_axi_port_c_RLAST(1'b0),
    .m_axi_port_c_RID(1'd0),
    .m_axi_port_c_RFIFONUM(11'd0),
    .m_axi_port_c_RUSER(1'd0),
    .m_axi_port_c_RRESP(2'd0),
    .m_axi_port_c_BVALID(m_axi_port_c_BVALID),
    .m_axi_port_c_BREADY(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_BREADY),
    .m_axi_port_c_BRESP(m_axi_port_c_BRESP),
    .m_axi_port_c_BID(m_axi_port_c_BID),
    .m_axi_port_c_BUSER(m_axi_port_c_BUSER),
    .Cstream_dout(Cstream_dout),
    .Cstream_num_data_valid(3'd0),
    .Cstream_fifo_cap(3'd0),
    .Cstream_empty_n(Cstream_empty_n),
    .Cstream_read(grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_Cstream_read),
    .sext_ln198(mul15_reg_112),
    .out_load(out_read_reg_107)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start_reg <= 1'b1;
        end else if ((grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_ready == 1'b1)) begin
            grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul15_reg_112[10 : 5] <= mul15_fu_94_p2[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        out_read_reg_107 <= out_r_dout;
        tn_read_reg_101 <= tn_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Cstream_read = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_Cstream_read;
    end else begin
        Cstream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_port_c_AWVALID = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWVALID;
    end else begin
        m_axi_port_c_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_port_c_BREADY = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_BREADY;
    end else begin
        m_axi_port_c_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_port_c_WVALID = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WVALID;
    end else begin
        m_axi_port_c_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_r_blk_n = out_r_empty_n;
    end else begin
        out_r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        out_r_read = 1'b1;
    end else begin
        out_r_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tn_blk_n = tn_empty_n;
    end else begin
        tn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        tn_read = 1'b1;
    end else begin
        tn_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((tn_empty_n == 1'b0) | (ap_start == 1'b0) | (out_r_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_ap_start_reg;

assign m_axi_port_c_ARADDR = 64'd0;

assign m_axi_port_c_ARBURST = 2'd0;

assign m_axi_port_c_ARCACHE = 4'd0;

assign m_axi_port_c_ARID = 1'd0;

assign m_axi_port_c_ARLEN = 32'd0;

assign m_axi_port_c_ARLOCK = 2'd0;

assign m_axi_port_c_ARPROT = 3'd0;

assign m_axi_port_c_ARQOS = 4'd0;

assign m_axi_port_c_ARREGION = 4'd0;

assign m_axi_port_c_ARSIZE = 3'd0;

assign m_axi_port_c_ARUSER = 1'd0;

assign m_axi_port_c_ARVALID = 1'b0;

assign m_axi_port_c_AWADDR = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWADDR;

assign m_axi_port_c_AWBURST = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWBURST;

assign m_axi_port_c_AWCACHE = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWCACHE;

assign m_axi_port_c_AWID = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWID;

assign m_axi_port_c_AWLEN = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWLEN;

assign m_axi_port_c_AWLOCK = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWLOCK;

assign m_axi_port_c_AWPROT = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWPROT;

assign m_axi_port_c_AWQOS = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWQOS;

assign m_axi_port_c_AWREGION = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWREGION;

assign m_axi_port_c_AWSIZE = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWSIZE;

assign m_axi_port_c_AWUSER = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_AWUSER;

assign m_axi_port_c_RREADY = 1'b0;

assign m_axi_port_c_WDATA = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WDATA;

assign m_axi_port_c_WID = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WID;

assign m_axi_port_c_WLAST = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WLAST;

assign m_axi_port_c_WSTRB = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WSTRB;

assign m_axi_port_c_WUSER = grp_writeC_Pipeline_tn_loop_tm_loop_wr_out_i_wr_out_j_fu_62_m_axi_port_c_WUSER;

assign mul15_fu_94_p2 = (p_shl_cast2_fu_79_p1 - p_shl1_cast3_fu_90_p1);

assign p_shl1_cast3_fu_90_p1 = p_shl1_fu_83_p3;

assign p_shl1_fu_83_p3 = {{tn_read_reg_101}, {5'd0}};

assign p_shl_cast2_fu_79_p1 = p_shl_fu_72_p3;

assign p_shl_fu_72_p3 = {{tn_read_reg_101}, {7'd0}};

always @ (posedge ap_clk) begin
    mul15_reg_112[4:0] <= 5'b00000;
end

endmodule //tiled_mm_writeC
