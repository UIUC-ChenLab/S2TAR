// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module tiled_mm_mm_mult_systolic (
        ap_clk,
        ap_rst,
        m_axi_port_a_AWVALID,
        m_axi_port_a_AWREADY,
        m_axi_port_a_AWADDR,
        m_axi_port_a_AWID,
        m_axi_port_a_AWLEN,
        m_axi_port_a_AWSIZE,
        m_axi_port_a_AWBURST,
        m_axi_port_a_AWLOCK,
        m_axi_port_a_AWCACHE,
        m_axi_port_a_AWPROT,
        m_axi_port_a_AWQOS,
        m_axi_port_a_AWREGION,
        m_axi_port_a_AWUSER,
        m_axi_port_a_WVALID,
        m_axi_port_a_WREADY,
        m_axi_port_a_WDATA,
        m_axi_port_a_WSTRB,
        m_axi_port_a_WLAST,
        m_axi_port_a_WID,
        m_axi_port_a_WUSER,
        m_axi_port_a_ARVALID,
        m_axi_port_a_ARREADY,
        m_axi_port_a_ARADDR,
        m_axi_port_a_ARID,
        m_axi_port_a_ARLEN,
        m_axi_port_a_ARSIZE,
        m_axi_port_a_ARBURST,
        m_axi_port_a_ARLOCK,
        m_axi_port_a_ARCACHE,
        m_axi_port_a_ARPROT,
        m_axi_port_a_ARQOS,
        m_axi_port_a_ARREGION,
        m_axi_port_a_ARUSER,
        m_axi_port_a_RVALID,
        m_axi_port_a_RREADY,
        m_axi_port_a_RDATA,
        m_axi_port_a_RLAST,
        m_axi_port_a_RID,
        m_axi_port_a_RFIFONUM,
        m_axi_port_a_RUSER,
        m_axi_port_a_RRESP,
        m_axi_port_a_BVALID,
        m_axi_port_a_BREADY,
        m_axi_port_a_BRESP,
        m_axi_port_a_BID,
        m_axi_port_a_BUSER,
        a,
        m_axi_port_b_AWVALID,
        m_axi_port_b_AWREADY,
        m_axi_port_b_AWADDR,
        m_axi_port_b_AWID,
        m_axi_port_b_AWLEN,
        m_axi_port_b_AWSIZE,
        m_axi_port_b_AWBURST,
        m_axi_port_b_AWLOCK,
        m_axi_port_b_AWCACHE,
        m_axi_port_b_AWPROT,
        m_axi_port_b_AWQOS,
        m_axi_port_b_AWREGION,
        m_axi_port_b_AWUSER,
        m_axi_port_b_WVALID,
        m_axi_port_b_WREADY,
        m_axi_port_b_WDATA,
        m_axi_port_b_WSTRB,
        m_axi_port_b_WLAST,
        m_axi_port_b_WID,
        m_axi_port_b_WUSER,
        m_axi_port_b_ARVALID,
        m_axi_port_b_ARREADY,
        m_axi_port_b_ARADDR,
        m_axi_port_b_ARID,
        m_axi_port_b_ARLEN,
        m_axi_port_b_ARSIZE,
        m_axi_port_b_ARBURST,
        m_axi_port_b_ARLOCK,
        m_axi_port_b_ARCACHE,
        m_axi_port_b_ARPROT,
        m_axi_port_b_ARQOS,
        m_axi_port_b_ARREGION,
        m_axi_port_b_ARUSER,
        m_axi_port_b_RVALID,
        m_axi_port_b_RREADY,
        m_axi_port_b_RDATA,
        m_axi_port_b_RLAST,
        m_axi_port_b_RID,
        m_axi_port_b_RFIFONUM,
        m_axi_port_b_RUSER,
        m_axi_port_b_RRESP,
        m_axi_port_b_BVALID,
        m_axi_port_b_BREADY,
        m_axi_port_b_BRESP,
        m_axi_port_b_BID,
        m_axi_port_b_BUSER,
        b,
        m_axi_port_c_AWVALID,
        m_axi_port_c_AWREADY,
        m_axi_port_c_AWADDR,
        m_axi_port_c_AWID,
        m_axi_port_c_AWLEN,
        m_axi_port_c_AWSIZE,
        m_axi_port_c_AWBURST,
        m_axi_port_c_AWLOCK,
        m_axi_port_c_AWCACHE,
        m_axi_port_c_AWPROT,
        m_axi_port_c_AWQOS,
        m_axi_port_c_AWREGION,
        m_axi_port_c_AWUSER,
        m_axi_port_c_WVALID,
        m_axi_port_c_WREADY,
        m_axi_port_c_WDATA,
        m_axi_port_c_WSTRB,
        m_axi_port_c_WLAST,
        m_axi_port_c_WID,
        m_axi_port_c_WUSER,
        m_axi_port_c_ARVALID,
        m_axi_port_c_ARREADY,
        m_axi_port_c_ARADDR,
        m_axi_port_c_ARID,
        m_axi_port_c_ARLEN,
        m_axi_port_c_ARSIZE,
        m_axi_port_c_ARBURST,
        m_axi_port_c_ARLOCK,
        m_axi_port_c_ARCACHE,
        m_axi_port_c_ARPROT,
        m_axi_port_c_ARQOS,
        m_axi_port_c_ARREGION,
        m_axi_port_c_ARUSER,
        m_axi_port_c_RVALID,
        m_axi_port_c_RREADY,
        m_axi_port_c_RDATA,
        m_axi_port_c_RLAST,
        m_axi_port_c_RID,
        m_axi_port_c_RFIFONUM,
        m_axi_port_c_RUSER,
        m_axi_port_c_RRESP,
        m_axi_port_c_BVALID,
        m_axi_port_c_BREADY,
        m_axi_port_c_BRESP,
        m_axi_port_c_BID,
        m_axi_port_c_BUSER,
        out_r,
        tn,
        out_r_ap_vld,
        ap_start,
        a_ap_vld,
        b_ap_vld,
        tn_ap_vld,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
output   m_axi_port_a_AWVALID;
input   m_axi_port_a_AWREADY;
output  [63:0] m_axi_port_a_AWADDR;
output  [0:0] m_axi_port_a_AWID;
output  [31:0] m_axi_port_a_AWLEN;
output  [2:0] m_axi_port_a_AWSIZE;
output  [1:0] m_axi_port_a_AWBURST;
output  [1:0] m_axi_port_a_AWLOCK;
output  [3:0] m_axi_port_a_AWCACHE;
output  [2:0] m_axi_port_a_AWPROT;
output  [3:0] m_axi_port_a_AWQOS;
output  [3:0] m_axi_port_a_AWREGION;
output  [0:0] m_axi_port_a_AWUSER;
output   m_axi_port_a_WVALID;
input   m_axi_port_a_WREADY;
output  [7:0] m_axi_port_a_WDATA;
output  [0:0] m_axi_port_a_WSTRB;
output   m_axi_port_a_WLAST;
output  [0:0] m_axi_port_a_WID;
output  [0:0] m_axi_port_a_WUSER;
output   m_axi_port_a_ARVALID;
input   m_axi_port_a_ARREADY;
output  [63:0] m_axi_port_a_ARADDR;
output  [0:0] m_axi_port_a_ARID;
output  [31:0] m_axi_port_a_ARLEN;
output  [2:0] m_axi_port_a_ARSIZE;
output  [1:0] m_axi_port_a_ARBURST;
output  [1:0] m_axi_port_a_ARLOCK;
output  [3:0] m_axi_port_a_ARCACHE;
output  [2:0] m_axi_port_a_ARPROT;
output  [3:0] m_axi_port_a_ARQOS;
output  [3:0] m_axi_port_a_ARREGION;
output  [0:0] m_axi_port_a_ARUSER;
input   m_axi_port_a_RVALID;
output   m_axi_port_a_RREADY;
input  [7:0] m_axi_port_a_RDATA;
input   m_axi_port_a_RLAST;
input  [0:0] m_axi_port_a_RID;
input  [10:0] m_axi_port_a_RFIFONUM;
input  [0:0] m_axi_port_a_RUSER;
input  [1:0] m_axi_port_a_RRESP;
input   m_axi_port_a_BVALID;
output   m_axi_port_a_BREADY;
input  [1:0] m_axi_port_a_BRESP;
input  [0:0] m_axi_port_a_BID;
input  [0:0] m_axi_port_a_BUSER;
input  [63:0] a;
output   m_axi_port_b_AWVALID;
input   m_axi_port_b_AWREADY;
output  [63:0] m_axi_port_b_AWADDR;
output  [0:0] m_axi_port_b_AWID;
output  [31:0] m_axi_port_b_AWLEN;
output  [2:0] m_axi_port_b_AWSIZE;
output  [1:0] m_axi_port_b_AWBURST;
output  [1:0] m_axi_port_b_AWLOCK;
output  [3:0] m_axi_port_b_AWCACHE;
output  [2:0] m_axi_port_b_AWPROT;
output  [3:0] m_axi_port_b_AWQOS;
output  [3:0] m_axi_port_b_AWREGION;
output  [0:0] m_axi_port_b_AWUSER;
output   m_axi_port_b_WVALID;
input   m_axi_port_b_WREADY;
output  [7:0] m_axi_port_b_WDATA;
output  [0:0] m_axi_port_b_WSTRB;
output   m_axi_port_b_WLAST;
output  [0:0] m_axi_port_b_WID;
output  [0:0] m_axi_port_b_WUSER;
output   m_axi_port_b_ARVALID;
input   m_axi_port_b_ARREADY;
output  [63:0] m_axi_port_b_ARADDR;
output  [0:0] m_axi_port_b_ARID;
output  [31:0] m_axi_port_b_ARLEN;
output  [2:0] m_axi_port_b_ARSIZE;
output  [1:0] m_axi_port_b_ARBURST;
output  [1:0] m_axi_port_b_ARLOCK;
output  [3:0] m_axi_port_b_ARCACHE;
output  [2:0] m_axi_port_b_ARPROT;
output  [3:0] m_axi_port_b_ARQOS;
output  [3:0] m_axi_port_b_ARREGION;
output  [0:0] m_axi_port_b_ARUSER;
input   m_axi_port_b_RVALID;
output   m_axi_port_b_RREADY;
input  [7:0] m_axi_port_b_RDATA;
input   m_axi_port_b_RLAST;
input  [0:0] m_axi_port_b_RID;
input  [10:0] m_axi_port_b_RFIFONUM;
input  [0:0] m_axi_port_b_RUSER;
input  [1:0] m_axi_port_b_RRESP;
input   m_axi_port_b_BVALID;
output   m_axi_port_b_BREADY;
input  [1:0] m_axi_port_b_BRESP;
input  [0:0] m_axi_port_b_BID;
input  [0:0] m_axi_port_b_BUSER;
input  [63:0] b;
output   m_axi_port_c_AWVALID;
input   m_axi_port_c_AWREADY;
output  [63:0] m_axi_port_c_AWADDR;
output  [0:0] m_axi_port_c_AWID;
output  [31:0] m_axi_port_c_AWLEN;
output  [2:0] m_axi_port_c_AWSIZE;
output  [1:0] m_axi_port_c_AWBURST;
output  [1:0] m_axi_port_c_AWLOCK;
output  [3:0] m_axi_port_c_AWCACHE;
output  [2:0] m_axi_port_c_AWPROT;
output  [3:0] m_axi_port_c_AWQOS;
output  [3:0] m_axi_port_c_AWREGION;
output  [0:0] m_axi_port_c_AWUSER;
output   m_axi_port_c_WVALID;
input   m_axi_port_c_WREADY;
output  [7:0] m_axi_port_c_WDATA;
output  [0:0] m_axi_port_c_WSTRB;
output   m_axi_port_c_WLAST;
output  [0:0] m_axi_port_c_WID;
output  [0:0] m_axi_port_c_WUSER;
output   m_axi_port_c_ARVALID;
input   m_axi_port_c_ARREADY;
output  [63:0] m_axi_port_c_ARADDR;
output  [0:0] m_axi_port_c_ARID;
output  [31:0] m_axi_port_c_ARLEN;
output  [2:0] m_axi_port_c_ARSIZE;
output  [1:0] m_axi_port_c_ARBURST;
output  [1:0] m_axi_port_c_ARLOCK;
output  [3:0] m_axi_port_c_ARCACHE;
output  [2:0] m_axi_port_c_ARPROT;
output  [3:0] m_axi_port_c_ARQOS;
output  [3:0] m_axi_port_c_ARREGION;
output  [0:0] m_axi_port_c_ARUSER;
input   m_axi_port_c_RVALID;
output   m_axi_port_c_RREADY;
input  [7:0] m_axi_port_c_RDATA;
input   m_axi_port_c_RLAST;
input  [0:0] m_axi_port_c_RID;
input  [10:0] m_axi_port_c_RFIFONUM;
input  [0:0] m_axi_port_c_RUSER;
input  [1:0] m_axi_port_c_RRESP;
input   m_axi_port_c_BVALID;
output   m_axi_port_c_BREADY;
input  [1:0] m_axi_port_c_BRESP;
input  [0:0] m_axi_port_c_BID;
input  [0:0] m_axi_port_c_BUSER;
input  [63:0] out_r;
input  [2:0] tn;
input   out_r_ap_vld;
input   ap_start;
input   a_ap_vld;
input   b_ap_vld;
input   tn_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [511:0] a_cache_i_q0;
wire   [511:0] a_cache_t_q0;
wire   [511:0] a_cache_1_i_q0;
wire   [511:0] a_cache_1_t_q0;
wire   [511:0] a_cache_2_i_q0;
wire   [511:0] a_cache_2_t_q0;
wire   [511:0] a_cache_3_i_q0;
wire   [511:0] a_cache_3_t_q0;
wire   [511:0] a_cache_4_i_q0;
wire   [511:0] a_cache_4_t_q0;
wire   [511:0] a_cache_5_i_q0;
wire   [511:0] a_cache_5_t_q0;
wire   [511:0] b_cache_i_q0;
wire   [511:0] b_cache_t_q0;
wire   [511:0] b_cache_1_i_q0;
wire   [511:0] b_cache_1_t_q0;
wire   [511:0] b_cache_2_i_q0;
wire   [511:0] b_cache_2_t_q0;
wire   [511:0] b_cache_3_i_q0;
wire   [511:0] b_cache_3_t_q0;
wire   [511:0] b_cache_4_i_q0;
wire   [511:0] b_cache_4_t_q0;
wire   [511:0] b_cache_5_i_q0;
wire   [511:0] b_cache_5_t_q0;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [63:0] entry_proc_U0_out_c_din;
wire    entry_proc_U0_out_c_write;
wire    readA_U0_ap_start;
wire    readA_U0_ap_done;
wire    readA_U0_ap_continue;
wire    readA_U0_ap_idle;
wire    readA_U0_ap_ready;
wire    readA_U0_m_axi_port_a_AWVALID;
wire   [63:0] readA_U0_m_axi_port_a_AWADDR;
wire   [0:0] readA_U0_m_axi_port_a_AWID;
wire   [31:0] readA_U0_m_axi_port_a_AWLEN;
wire   [2:0] readA_U0_m_axi_port_a_AWSIZE;
wire   [1:0] readA_U0_m_axi_port_a_AWBURST;
wire   [1:0] readA_U0_m_axi_port_a_AWLOCK;
wire   [3:0] readA_U0_m_axi_port_a_AWCACHE;
wire   [2:0] readA_U0_m_axi_port_a_AWPROT;
wire   [3:0] readA_U0_m_axi_port_a_AWQOS;
wire   [3:0] readA_U0_m_axi_port_a_AWREGION;
wire   [0:0] readA_U0_m_axi_port_a_AWUSER;
wire    readA_U0_m_axi_port_a_WVALID;
wire   [7:0] readA_U0_m_axi_port_a_WDATA;
wire   [0:0] readA_U0_m_axi_port_a_WSTRB;
wire    readA_U0_m_axi_port_a_WLAST;
wire   [0:0] readA_U0_m_axi_port_a_WID;
wire   [0:0] readA_U0_m_axi_port_a_WUSER;
wire    readA_U0_m_axi_port_a_ARVALID;
wire   [63:0] readA_U0_m_axi_port_a_ARADDR;
wire   [0:0] readA_U0_m_axi_port_a_ARID;
wire   [31:0] readA_U0_m_axi_port_a_ARLEN;
wire   [2:0] readA_U0_m_axi_port_a_ARSIZE;
wire   [1:0] readA_U0_m_axi_port_a_ARBURST;
wire   [1:0] readA_U0_m_axi_port_a_ARLOCK;
wire   [3:0] readA_U0_m_axi_port_a_ARCACHE;
wire   [2:0] readA_U0_m_axi_port_a_ARPROT;
wire   [3:0] readA_U0_m_axi_port_a_ARQOS;
wire   [3:0] readA_U0_m_axi_port_a_ARREGION;
wire   [0:0] readA_U0_m_axi_port_a_ARUSER;
wire    readA_U0_m_axi_port_a_RREADY;
wire    readA_U0_m_axi_port_a_BREADY;
wire   [7:0] readA_U0_a_cache_0_address0;
wire    readA_U0_a_cache_0_ce0;
wire    readA_U0_a_cache_0_we0;
wire   [511:0] readA_U0_a_cache_0_d0;
wire   [7:0] readA_U0_a_cache_1_address0;
wire    readA_U0_a_cache_1_ce0;
wire    readA_U0_a_cache_1_we0;
wire   [511:0] readA_U0_a_cache_1_d0;
wire   [7:0] readA_U0_a_cache_2_address0;
wire    readA_U0_a_cache_2_ce0;
wire    readA_U0_a_cache_2_we0;
wire   [511:0] readA_U0_a_cache_2_d0;
wire   [7:0] readA_U0_a_cache_3_address0;
wire    readA_U0_a_cache_3_ce0;
wire    readA_U0_a_cache_3_we0;
wire   [511:0] readA_U0_a_cache_3_d0;
wire   [7:0] readA_U0_a_cache_4_address0;
wire    readA_U0_a_cache_4_ce0;
wire    readA_U0_a_cache_4_we0;
wire   [511:0] readA_U0_a_cache_4_d0;
wire   [7:0] readA_U0_a_cache_5_address0;
wire    readA_U0_a_cache_5_ce0;
wire    readA_U0_a_cache_5_we0;
wire   [511:0] readA_U0_a_cache_5_d0;
wire    ap_channel_done_a_cache_5;
wire    readA_U0_a_cache_5_full_n;
reg    ap_sync_reg_channel_write_a_cache_5;
wire    ap_sync_channel_write_a_cache_5;
wire    ap_channel_done_a_cache_4;
wire    readA_U0_a_cache_4_full_n;
reg    ap_sync_reg_channel_write_a_cache_4;
wire    ap_sync_channel_write_a_cache_4;
wire    ap_channel_done_a_cache_3;
wire    readA_U0_a_cache_3_full_n;
reg    ap_sync_reg_channel_write_a_cache_3;
wire    ap_sync_channel_write_a_cache_3;
wire    ap_channel_done_a_cache_2;
wire    readA_U0_a_cache_2_full_n;
reg    ap_sync_reg_channel_write_a_cache_2;
wire    ap_sync_channel_write_a_cache_2;
wire    ap_channel_done_a_cache_1;
wire    readA_U0_a_cache_1_full_n;
reg    ap_sync_reg_channel_write_a_cache_1;
wire    ap_sync_channel_write_a_cache_1;
wire    ap_channel_done_a_cache;
wire    readA_U0_a_cache_0_full_n;
reg    ap_sync_reg_channel_write_a_cache;
wire    ap_sync_channel_write_a_cache;
wire    writehfifo_U0_ap_start;
wire    writehfifo_U0_ap_done;
wire    writehfifo_U0_ap_continue;
wire    writehfifo_U0_ap_idle;
wire    writehfifo_U0_ap_ready;
wire   [15:0] writehfifo_U0_h_fifo_0_0_din;
wire    writehfifo_U0_h_fifo_0_0_write;
wire   [15:0] writehfifo_U0_h_fifo_1_0_din;
wire    writehfifo_U0_h_fifo_1_0_write;
wire   [15:0] writehfifo_U0_h_fifo_2_0_din;
wire    writehfifo_U0_h_fifo_2_0_write;
wire   [15:0] writehfifo_U0_h_fifo_3_0_din;
wire    writehfifo_U0_h_fifo_3_0_write;
wire   [15:0] writehfifo_U0_h_fifo_4_0_din;
wire    writehfifo_U0_h_fifo_4_0_write;
wire   [15:0] writehfifo_U0_h_fifo_5_0_din;
wire    writehfifo_U0_h_fifo_5_0_write;
wire    writehfifo_U0_start_out;
wire    writehfifo_U0_start_write;
wire   [7:0] writehfifo_U0_a_cache_0_address0;
wire    writehfifo_U0_a_cache_0_ce0;
wire   [7:0] writehfifo_U0_a_cache_1_address0;
wire    writehfifo_U0_a_cache_1_ce0;
wire   [7:0] writehfifo_U0_a_cache_2_address0;
wire    writehfifo_U0_a_cache_2_ce0;
wire   [7:0] writehfifo_U0_a_cache_3_address0;
wire    writehfifo_U0_a_cache_3_ce0;
wire   [7:0] writehfifo_U0_a_cache_4_address0;
wire    writehfifo_U0_a_cache_4_ce0;
wire   [7:0] writehfifo_U0_a_cache_5_address0;
wire    writehfifo_U0_a_cache_5_ce0;
wire    readB_U0_ap_start;
wire    readB_U0_ap_done;
wire    readB_U0_ap_continue;
wire    readB_U0_ap_idle;
wire    readB_U0_ap_ready;
wire    readB_U0_m_axi_port_b_AWVALID;
wire   [63:0] readB_U0_m_axi_port_b_AWADDR;
wire   [0:0] readB_U0_m_axi_port_b_AWID;
wire   [31:0] readB_U0_m_axi_port_b_AWLEN;
wire   [2:0] readB_U0_m_axi_port_b_AWSIZE;
wire   [1:0] readB_U0_m_axi_port_b_AWBURST;
wire   [1:0] readB_U0_m_axi_port_b_AWLOCK;
wire   [3:0] readB_U0_m_axi_port_b_AWCACHE;
wire   [2:0] readB_U0_m_axi_port_b_AWPROT;
wire   [3:0] readB_U0_m_axi_port_b_AWQOS;
wire   [3:0] readB_U0_m_axi_port_b_AWREGION;
wire   [0:0] readB_U0_m_axi_port_b_AWUSER;
wire    readB_U0_m_axi_port_b_WVALID;
wire   [7:0] readB_U0_m_axi_port_b_WDATA;
wire   [0:0] readB_U0_m_axi_port_b_WSTRB;
wire    readB_U0_m_axi_port_b_WLAST;
wire   [0:0] readB_U0_m_axi_port_b_WID;
wire   [0:0] readB_U0_m_axi_port_b_WUSER;
wire    readB_U0_m_axi_port_b_ARVALID;
wire   [63:0] readB_U0_m_axi_port_b_ARADDR;
wire   [0:0] readB_U0_m_axi_port_b_ARID;
wire   [31:0] readB_U0_m_axi_port_b_ARLEN;
wire   [2:0] readB_U0_m_axi_port_b_ARSIZE;
wire   [1:0] readB_U0_m_axi_port_b_ARBURST;
wire   [1:0] readB_U0_m_axi_port_b_ARLOCK;
wire   [3:0] readB_U0_m_axi_port_b_ARCACHE;
wire   [2:0] readB_U0_m_axi_port_b_ARPROT;
wire   [3:0] readB_U0_m_axi_port_b_ARQOS;
wire   [3:0] readB_U0_m_axi_port_b_ARREGION;
wire   [0:0] readB_U0_m_axi_port_b_ARUSER;
wire    readB_U0_m_axi_port_b_RREADY;
wire    readB_U0_m_axi_port_b_BREADY;
wire   [7:0] readB_U0_b_cache_0_address0;
wire    readB_U0_b_cache_0_ce0;
wire    readB_U0_b_cache_0_we0;
wire   [511:0] readB_U0_b_cache_0_d0;
wire   [7:0] readB_U0_b_cache_1_address0;
wire    readB_U0_b_cache_1_ce0;
wire    readB_U0_b_cache_1_we0;
wire   [511:0] readB_U0_b_cache_1_d0;
wire   [7:0] readB_U0_b_cache_2_address0;
wire    readB_U0_b_cache_2_ce0;
wire    readB_U0_b_cache_2_we0;
wire   [511:0] readB_U0_b_cache_2_d0;
wire   [7:0] readB_U0_b_cache_3_address0;
wire    readB_U0_b_cache_3_ce0;
wire    readB_U0_b_cache_3_we0;
wire   [511:0] readB_U0_b_cache_3_d0;
wire   [7:0] readB_U0_b_cache_4_address0;
wire    readB_U0_b_cache_4_ce0;
wire    readB_U0_b_cache_4_we0;
wire   [511:0] readB_U0_b_cache_4_d0;
wire   [7:0] readB_U0_b_cache_5_address0;
wire    readB_U0_b_cache_5_ce0;
wire    readB_U0_b_cache_5_we0;
wire   [511:0] readB_U0_b_cache_5_d0;
wire   [2:0] readB_U0_tn_c_din;
wire    readB_U0_tn_c_write;
wire    ap_channel_done_b_cache_5;
wire    readB_U0_b_cache_5_full_n;
reg    ap_sync_reg_channel_write_b_cache_5;
wire    ap_sync_channel_write_b_cache_5;
wire    ap_channel_done_b_cache_4;
wire    readB_U0_b_cache_4_full_n;
reg    ap_sync_reg_channel_write_b_cache_4;
wire    ap_sync_channel_write_b_cache_4;
wire    ap_channel_done_b_cache_3;
wire    readB_U0_b_cache_3_full_n;
reg    ap_sync_reg_channel_write_b_cache_3;
wire    ap_sync_channel_write_b_cache_3;
wire    ap_channel_done_b_cache_2;
wire    readB_U0_b_cache_2_full_n;
reg    ap_sync_reg_channel_write_b_cache_2;
wire    ap_sync_channel_write_b_cache_2;
wire    ap_channel_done_b_cache_1;
wire    readB_U0_b_cache_1_full_n;
reg    ap_sync_reg_channel_write_b_cache_1;
wire    ap_sync_channel_write_b_cache_1;
wire    ap_channel_done_b_cache;
wire    readB_U0_b_cache_0_full_n;
reg    ap_sync_reg_channel_write_b_cache;
wire    ap_sync_channel_write_b_cache;
wire    writevfifo_U0_ap_start;
wire    writevfifo_U0_ap_done;
wire    writevfifo_U0_ap_continue;
wire    writevfifo_U0_ap_idle;
wire    writevfifo_U0_ap_ready;
wire   [15:0] writevfifo_U0_v_fifo_0_0_din;
wire    writevfifo_U0_v_fifo_0_0_write;
wire   [15:0] writevfifo_U0_v_fifo_0_1_din;
wire    writevfifo_U0_v_fifo_0_1_write;
wire   [15:0] writevfifo_U0_v_fifo_0_2_din;
wire    writevfifo_U0_v_fifo_0_2_write;
wire   [15:0] writevfifo_U0_v_fifo_0_3_din;
wire    writevfifo_U0_v_fifo_0_3_write;
wire   [15:0] writevfifo_U0_v_fifo_0_4_din;
wire    writevfifo_U0_v_fifo_0_4_write;
wire   [15:0] writevfifo_U0_v_fifo_0_5_din;
wire    writevfifo_U0_v_fifo_0_5_write;
wire   [7:0] writevfifo_U0_b_cache_0_address0;
wire    writevfifo_U0_b_cache_0_ce0;
wire   [7:0] writevfifo_U0_b_cache_1_address0;
wire    writevfifo_U0_b_cache_1_ce0;
wire   [7:0] writevfifo_U0_b_cache_2_address0;
wire    writevfifo_U0_b_cache_2_ce0;
wire   [7:0] writevfifo_U0_b_cache_3_address0;
wire    writevfifo_U0_b_cache_3_ce0;
wire   [7:0] writevfifo_U0_b_cache_4_address0;
wire    writevfifo_U0_b_cache_4_ce0;
wire   [7:0] writevfifo_U0_b_cache_5_address0;
wire    writevfifo_U0_b_cache_5_ce0;
wire    tn_loop_proc_U0_h_fifo_read;
wire    tn_loop_proc_U0_v_fifo_read;
wire    tn_loop_proc_U0_v_fifo_1_read;
wire    tn_loop_proc_U0_v_fifo_2_read;
wire    tn_loop_proc_U0_v_fifo_3_read;
wire    tn_loop_proc_U0_v_fifo_4_read;
wire    tn_loop_proc_U0_v_fifo_5_read;
wire    tn_loop_proc_U0_h_fifo_1_read;
wire    tn_loop_proc_U0_h_fifo_2_read;
wire    tn_loop_proc_U0_h_fifo_3_read;
wire    tn_loop_proc_U0_h_fifo_4_read;
wire    tn_loop_proc_U0_h_fifo_5_read;
wire   [7:0] tn_loop_proc_U0_Cstream_din;
wire    tn_loop_proc_U0_Cstream_write;
wire    tn_loop_proc_U0_ap_start;
wire    tn_loop_proc_U0_ap_done;
wire    tn_loop_proc_U0_ap_ready;
wire    tn_loop_proc_U0_ap_idle;
wire    tn_loop_proc_U0_ap_continue;
wire    writeC_U0_ap_start;
wire    writeC_U0_ap_done;
wire    writeC_U0_ap_continue;
wire    writeC_U0_ap_idle;
wire    writeC_U0_ap_ready;
wire    writeC_U0_m_axi_port_c_AWVALID;
wire   [63:0] writeC_U0_m_axi_port_c_AWADDR;
wire   [0:0] writeC_U0_m_axi_port_c_AWID;
wire   [31:0] writeC_U0_m_axi_port_c_AWLEN;
wire   [2:0] writeC_U0_m_axi_port_c_AWSIZE;
wire   [1:0] writeC_U0_m_axi_port_c_AWBURST;
wire   [1:0] writeC_U0_m_axi_port_c_AWLOCK;
wire   [3:0] writeC_U0_m_axi_port_c_AWCACHE;
wire   [2:0] writeC_U0_m_axi_port_c_AWPROT;
wire   [3:0] writeC_U0_m_axi_port_c_AWQOS;
wire   [3:0] writeC_U0_m_axi_port_c_AWREGION;
wire   [0:0] writeC_U0_m_axi_port_c_AWUSER;
wire    writeC_U0_m_axi_port_c_WVALID;
wire   [7:0] writeC_U0_m_axi_port_c_WDATA;
wire   [0:0] writeC_U0_m_axi_port_c_WSTRB;
wire    writeC_U0_m_axi_port_c_WLAST;
wire   [0:0] writeC_U0_m_axi_port_c_WID;
wire   [0:0] writeC_U0_m_axi_port_c_WUSER;
wire    writeC_U0_m_axi_port_c_ARVALID;
wire   [63:0] writeC_U0_m_axi_port_c_ARADDR;
wire   [0:0] writeC_U0_m_axi_port_c_ARID;
wire   [31:0] writeC_U0_m_axi_port_c_ARLEN;
wire   [2:0] writeC_U0_m_axi_port_c_ARSIZE;
wire   [1:0] writeC_U0_m_axi_port_c_ARBURST;
wire   [1:0] writeC_U0_m_axi_port_c_ARLOCK;
wire   [3:0] writeC_U0_m_axi_port_c_ARCACHE;
wire   [2:0] writeC_U0_m_axi_port_c_ARPROT;
wire   [3:0] writeC_U0_m_axi_port_c_ARQOS;
wire   [3:0] writeC_U0_m_axi_port_c_ARREGION;
wire   [0:0] writeC_U0_m_axi_port_c_ARUSER;
wire    writeC_U0_m_axi_port_c_RREADY;
wire    writeC_U0_m_axi_port_c_BREADY;
wire    writeC_U0_out_r_read;
wire    writeC_U0_Cstream_read;
wire    writeC_U0_tn_read;
wire    a_cache_i_full_n;
wire    a_cache_t_empty_n;
wire    a_cache_1_i_full_n;
wire    a_cache_1_t_empty_n;
wire    a_cache_2_i_full_n;
wire    a_cache_2_t_empty_n;
wire    a_cache_3_i_full_n;
wire    a_cache_3_t_empty_n;
wire    a_cache_4_i_full_n;
wire    a_cache_4_t_empty_n;
wire    a_cache_5_i_full_n;
wire    a_cache_5_t_empty_n;
wire    b_cache_i_full_n;
wire    b_cache_t_empty_n;
wire    b_cache_1_i_full_n;
wire    b_cache_1_t_empty_n;
wire    b_cache_2_i_full_n;
wire    b_cache_2_t_empty_n;
wire    b_cache_3_i_full_n;
wire    b_cache_3_t_empty_n;
wire    b_cache_4_i_full_n;
wire    b_cache_4_t_empty_n;
wire    b_cache_5_i_full_n;
wire    b_cache_5_t_empty_n;
wire    out_c_full_n;
wire   [63:0] out_c_dout;
wire   [3:0] out_c_num_data_valid;
wire   [3:0] out_c_fifo_cap;
wire    out_c_empty_n;
wire    h_fifo_full_n;
wire   [15:0] h_fifo_dout;
wire   [2:0] h_fifo_num_data_valid;
wire   [2:0] h_fifo_fifo_cap;
wire    h_fifo_empty_n;
wire    h_fifo_1_full_n;
wire   [15:0] h_fifo_1_dout;
wire   [2:0] h_fifo_1_num_data_valid;
wire   [2:0] h_fifo_1_fifo_cap;
wire    h_fifo_1_empty_n;
wire    h_fifo_2_full_n;
wire   [15:0] h_fifo_2_dout;
wire   [2:0] h_fifo_2_num_data_valid;
wire   [2:0] h_fifo_2_fifo_cap;
wire    h_fifo_2_empty_n;
wire    h_fifo_3_full_n;
wire   [15:0] h_fifo_3_dout;
wire   [2:0] h_fifo_3_num_data_valid;
wire   [2:0] h_fifo_3_fifo_cap;
wire    h_fifo_3_empty_n;
wire    h_fifo_4_full_n;
wire   [15:0] h_fifo_4_dout;
wire   [2:0] h_fifo_4_num_data_valid;
wire   [2:0] h_fifo_4_fifo_cap;
wire    h_fifo_4_empty_n;
wire    h_fifo_5_full_n;
wire   [15:0] h_fifo_5_dout;
wire   [2:0] h_fifo_5_num_data_valid;
wire   [2:0] h_fifo_5_fifo_cap;
wire    h_fifo_5_empty_n;
wire    tn_c_full_n;
wire   [2:0] tn_c_dout;
wire   [2:0] tn_c_num_data_valid;
wire   [2:0] tn_c_fifo_cap;
wire    tn_c_empty_n;
wire    v_fifo_full_n;
wire   [15:0] v_fifo_dout;
wire   [2:0] v_fifo_num_data_valid;
wire   [2:0] v_fifo_fifo_cap;
wire    v_fifo_empty_n;
wire    v_fifo_1_full_n;
wire   [15:0] v_fifo_1_dout;
wire   [2:0] v_fifo_1_num_data_valid;
wire   [2:0] v_fifo_1_fifo_cap;
wire    v_fifo_1_empty_n;
wire    v_fifo_2_full_n;
wire   [15:0] v_fifo_2_dout;
wire   [2:0] v_fifo_2_num_data_valid;
wire   [2:0] v_fifo_2_fifo_cap;
wire    v_fifo_2_empty_n;
wire    v_fifo_3_full_n;
wire   [15:0] v_fifo_3_dout;
wire   [2:0] v_fifo_3_num_data_valid;
wire   [2:0] v_fifo_3_fifo_cap;
wire    v_fifo_3_empty_n;
wire    v_fifo_4_full_n;
wire   [15:0] v_fifo_4_dout;
wire   [2:0] v_fifo_4_num_data_valid;
wire   [2:0] v_fifo_4_fifo_cap;
wire    v_fifo_4_empty_n;
wire    v_fifo_5_full_n;
wire   [15:0] v_fifo_5_dout;
wire   [2:0] v_fifo_5_num_data_valid;
wire   [2:0] v_fifo_5_fifo_cap;
wire    v_fifo_5_empty_n;
wire    Cstream_full_n;
wire   [7:0] Cstream_dout;
wire   [2:0] Cstream_num_data_valid;
wire   [2:0] Cstream_fifo_cap;
wire    Cstream_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_readA_U0_ap_ready;
wire    ap_sync_readA_U0_ap_ready;
reg    ap_sync_reg_readB_U0_ap_ready;
wire    ap_sync_readB_U0_ap_ready;
wire   [0:0] start_for_writeC_U0_din;
wire    start_for_writeC_U0_full_n;
wire   [0:0] start_for_writeC_U0_dout;
wire    start_for_writeC_U0_empty_n;
wire   [0:0] start_for_tn_loop_proc_U0_din;
wire    start_for_tn_loop_proc_U0_full_n;
wire   [0:0] start_for_tn_loop_proc_U0_dout;
wire    start_for_tn_loop_proc_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_a_cache_5 = 1'b0;
#0 ap_sync_reg_channel_write_a_cache_4 = 1'b0;
#0 ap_sync_reg_channel_write_a_cache_3 = 1'b0;
#0 ap_sync_reg_channel_write_a_cache_2 = 1'b0;
#0 ap_sync_reg_channel_write_a_cache_1 = 1'b0;
#0 ap_sync_reg_channel_write_a_cache = 1'b0;
#0 ap_sync_reg_channel_write_b_cache_5 = 1'b0;
#0 ap_sync_reg_channel_write_b_cache_4 = 1'b0;
#0 ap_sync_reg_channel_write_b_cache_3 = 1'b0;
#0 ap_sync_reg_channel_write_b_cache_2 = 1'b0;
#0 ap_sync_reg_channel_write_b_cache_1 = 1'b0;
#0 ap_sync_reg_channel_write_b_cache = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_readA_U0_ap_ready = 1'b0;
#0 ap_sync_reg_readB_U0_ap_ready = 1'b0;
end

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
a_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readA_U0_a_cache_0_address0),
    .i_ce0(readA_U0_a_cache_0_ce0),
    .i_we0(readA_U0_a_cache_0_we0),
    .i_d0(readA_U0_a_cache_0_d0),
    .i_q0(a_cache_i_q0),
    .t_address0(writehfifo_U0_a_cache_0_address0),
    .t_ce0(writehfifo_U0_a_cache_0_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(a_cache_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(a_cache_i_full_n),
    .i_write(ap_channel_done_a_cache),
    .t_empty_n(a_cache_t_empty_n),
    .t_read(writehfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
a_cache_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readA_U0_a_cache_1_address0),
    .i_ce0(readA_U0_a_cache_1_ce0),
    .i_we0(readA_U0_a_cache_1_we0),
    .i_d0(readA_U0_a_cache_1_d0),
    .i_q0(a_cache_1_i_q0),
    .t_address0(writehfifo_U0_a_cache_1_address0),
    .t_ce0(writehfifo_U0_a_cache_1_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(a_cache_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(a_cache_1_i_full_n),
    .i_write(ap_channel_done_a_cache_1),
    .t_empty_n(a_cache_1_t_empty_n),
    .t_read(writehfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
a_cache_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readA_U0_a_cache_2_address0),
    .i_ce0(readA_U0_a_cache_2_ce0),
    .i_we0(readA_U0_a_cache_2_we0),
    .i_d0(readA_U0_a_cache_2_d0),
    .i_q0(a_cache_2_i_q0),
    .t_address0(writehfifo_U0_a_cache_2_address0),
    .t_ce0(writehfifo_U0_a_cache_2_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(a_cache_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(a_cache_2_i_full_n),
    .i_write(ap_channel_done_a_cache_2),
    .t_empty_n(a_cache_2_t_empty_n),
    .t_read(writehfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
a_cache_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readA_U0_a_cache_3_address0),
    .i_ce0(readA_U0_a_cache_3_ce0),
    .i_we0(readA_U0_a_cache_3_we0),
    .i_d0(readA_U0_a_cache_3_d0),
    .i_q0(a_cache_3_i_q0),
    .t_address0(writehfifo_U0_a_cache_3_address0),
    .t_ce0(writehfifo_U0_a_cache_3_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(a_cache_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(a_cache_3_i_full_n),
    .i_write(ap_channel_done_a_cache_3),
    .t_empty_n(a_cache_3_t_empty_n),
    .t_read(writehfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
a_cache_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readA_U0_a_cache_4_address0),
    .i_ce0(readA_U0_a_cache_4_ce0),
    .i_we0(readA_U0_a_cache_4_we0),
    .i_d0(readA_U0_a_cache_4_d0),
    .i_q0(a_cache_4_i_q0),
    .t_address0(writehfifo_U0_a_cache_4_address0),
    .t_ce0(writehfifo_U0_a_cache_4_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(a_cache_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(a_cache_4_i_full_n),
    .i_write(ap_channel_done_a_cache_4),
    .t_empty_n(a_cache_4_t_empty_n),
    .t_read(writehfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
a_cache_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readA_U0_a_cache_5_address0),
    .i_ce0(readA_U0_a_cache_5_ce0),
    .i_we0(readA_U0_a_cache_5_we0),
    .i_d0(readA_U0_a_cache_5_d0),
    .i_q0(a_cache_5_i_q0),
    .t_address0(writehfifo_U0_a_cache_5_address0),
    .t_ce0(writehfifo_U0_a_cache_5_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(a_cache_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(a_cache_5_i_full_n),
    .i_write(ap_channel_done_a_cache_5),
    .t_empty_n(a_cache_5_t_empty_n),
    .t_read(writehfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readB_U0_b_cache_0_address0),
    .i_ce0(readB_U0_b_cache_0_ce0),
    .i_we0(readB_U0_b_cache_0_we0),
    .i_d0(readB_U0_b_cache_0_d0),
    .i_q0(b_cache_i_q0),
    .t_address0(writevfifo_U0_b_cache_0_address0),
    .t_ce0(writevfifo_U0_b_cache_0_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(b_cache_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(b_cache_i_full_n),
    .i_write(ap_channel_done_b_cache),
    .t_empty_n(b_cache_t_empty_n),
    .t_read(writevfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_cache_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readB_U0_b_cache_1_address0),
    .i_ce0(readB_U0_b_cache_1_ce0),
    .i_we0(readB_U0_b_cache_1_we0),
    .i_d0(readB_U0_b_cache_1_d0),
    .i_q0(b_cache_1_i_q0),
    .t_address0(writevfifo_U0_b_cache_1_address0),
    .t_ce0(writevfifo_U0_b_cache_1_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(b_cache_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(b_cache_1_i_full_n),
    .i_write(ap_channel_done_b_cache_1),
    .t_empty_n(b_cache_1_t_empty_n),
    .t_read(writevfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_cache_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readB_U0_b_cache_2_address0),
    .i_ce0(readB_U0_b_cache_2_ce0),
    .i_we0(readB_U0_b_cache_2_we0),
    .i_d0(readB_U0_b_cache_2_d0),
    .i_q0(b_cache_2_i_q0),
    .t_address0(writevfifo_U0_b_cache_2_address0),
    .t_ce0(writevfifo_U0_b_cache_2_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(b_cache_2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(b_cache_2_i_full_n),
    .i_write(ap_channel_done_b_cache_2),
    .t_empty_n(b_cache_2_t_empty_n),
    .t_read(writevfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_cache_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readB_U0_b_cache_3_address0),
    .i_ce0(readB_U0_b_cache_3_ce0),
    .i_we0(readB_U0_b_cache_3_we0),
    .i_d0(readB_U0_b_cache_3_d0),
    .i_q0(b_cache_3_i_q0),
    .t_address0(writevfifo_U0_b_cache_3_address0),
    .t_ce0(writevfifo_U0_b_cache_3_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(b_cache_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(b_cache_3_i_full_n),
    .i_write(ap_channel_done_b_cache_3),
    .t_empty_n(b_cache_3_t_empty_n),
    .t_read(writevfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_cache_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readB_U0_b_cache_4_address0),
    .i_ce0(readB_U0_b_cache_4_ce0),
    .i_we0(readB_U0_b_cache_4_we0),
    .i_d0(readB_U0_b_cache_4_d0),
    .i_q0(b_cache_4_i_q0),
    .t_address0(writevfifo_U0_b_cache_4_address0),
    .t_ce0(writevfifo_U0_b_cache_4_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(b_cache_4_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(b_cache_4_i_full_n),
    .i_write(ap_channel_done_b_cache_4),
    .t_empty_n(b_cache_4_t_empty_n),
    .t_read(writevfifo_U0_ap_ready)
);

tiled_mm_mm_mult_systolic_a_cache_RAM_AUTO_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
b_cache_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(readB_U0_b_cache_5_address0),
    .i_ce0(readB_U0_b_cache_5_ce0),
    .i_we0(readB_U0_b_cache_5_we0),
    .i_d0(readB_U0_b_cache_5_d0),
    .i_q0(b_cache_5_i_q0),
    .t_address0(writevfifo_U0_b_cache_5_address0),
    .t_ce0(writevfifo_U0_b_cache_5_ce0),
    .t_we0(1'b0),
    .t_d0(512'd0),
    .t_q0(b_cache_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(b_cache_5_i_full_n),
    .i_write(ap_channel_done_b_cache_5),
    .t_empty_n(b_cache_5_t_empty_n),
    .t_read(writevfifo_U0_ap_ready)
);

tiled_mm_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_writeC_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .out_r(out_r),
    .out_c_din(entry_proc_U0_out_c_din),
    .out_c_num_data_valid(out_c_num_data_valid),
    .out_c_fifo_cap(out_c_fifo_cap),
    .out_c_full_n(out_c_full_n),
    .out_c_write(entry_proc_U0_out_c_write)
);

tiled_mm_readA readA_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(readA_U0_ap_start),
    .ap_done(readA_U0_ap_done),
    .ap_continue(readA_U0_ap_continue),
    .ap_idle(readA_U0_ap_idle),
    .ap_ready(readA_U0_ap_ready),
    .m_axi_port_a_AWVALID(readA_U0_m_axi_port_a_AWVALID),
    .m_axi_port_a_AWREADY(1'b0),
    .m_axi_port_a_AWADDR(readA_U0_m_axi_port_a_AWADDR),
    .m_axi_port_a_AWID(readA_U0_m_axi_port_a_AWID),
    .m_axi_port_a_AWLEN(readA_U0_m_axi_port_a_AWLEN),
    .m_axi_port_a_AWSIZE(readA_U0_m_axi_port_a_AWSIZE),
    .m_axi_port_a_AWBURST(readA_U0_m_axi_port_a_AWBURST),
    .m_axi_port_a_AWLOCK(readA_U0_m_axi_port_a_AWLOCK),
    .m_axi_port_a_AWCACHE(readA_U0_m_axi_port_a_AWCACHE),
    .m_axi_port_a_AWPROT(readA_U0_m_axi_port_a_AWPROT),
    .m_axi_port_a_AWQOS(readA_U0_m_axi_port_a_AWQOS),
    .m_axi_port_a_AWREGION(readA_U0_m_axi_port_a_AWREGION),
    .m_axi_port_a_AWUSER(readA_U0_m_axi_port_a_AWUSER),
    .m_axi_port_a_WVALID(readA_U0_m_axi_port_a_WVALID),
    .m_axi_port_a_WREADY(1'b0),
    .m_axi_port_a_WDATA(readA_U0_m_axi_port_a_WDATA),
    .m_axi_port_a_WSTRB(readA_U0_m_axi_port_a_WSTRB),
    .m_axi_port_a_WLAST(readA_U0_m_axi_port_a_WLAST),
    .m_axi_port_a_WID(readA_U0_m_axi_port_a_WID),
    .m_axi_port_a_WUSER(readA_U0_m_axi_port_a_WUSER),
    .m_axi_port_a_ARVALID(readA_U0_m_axi_port_a_ARVALID),
    .m_axi_port_a_ARREADY(m_axi_port_a_ARREADY),
    .m_axi_port_a_ARADDR(readA_U0_m_axi_port_a_ARADDR),
    .m_axi_port_a_ARID(readA_U0_m_axi_port_a_ARID),
    .m_axi_port_a_ARLEN(readA_U0_m_axi_port_a_ARLEN),
    .m_axi_port_a_ARSIZE(readA_U0_m_axi_port_a_ARSIZE),
    .m_axi_port_a_ARBURST(readA_U0_m_axi_port_a_ARBURST),
    .m_axi_port_a_ARLOCK(readA_U0_m_axi_port_a_ARLOCK),
    .m_axi_port_a_ARCACHE(readA_U0_m_axi_port_a_ARCACHE),
    .m_axi_port_a_ARPROT(readA_U0_m_axi_port_a_ARPROT),
    .m_axi_port_a_ARQOS(readA_U0_m_axi_port_a_ARQOS),
    .m_axi_port_a_ARREGION(readA_U0_m_axi_port_a_ARREGION),
    .m_axi_port_a_ARUSER(readA_U0_m_axi_port_a_ARUSER),
    .m_axi_port_a_RVALID(m_axi_port_a_RVALID),
    .m_axi_port_a_RREADY(readA_U0_m_axi_port_a_RREADY),
    .m_axi_port_a_RDATA(m_axi_port_a_RDATA),
    .m_axi_port_a_RLAST(m_axi_port_a_RLAST),
    .m_axi_port_a_RID(m_axi_port_a_RID),
    .m_axi_port_a_RFIFONUM(m_axi_port_a_RFIFONUM),
    .m_axi_port_a_RUSER(m_axi_port_a_RUSER),
    .m_axi_port_a_RRESP(m_axi_port_a_RRESP),
    .m_axi_port_a_BVALID(1'b0),
    .m_axi_port_a_BREADY(readA_U0_m_axi_port_a_BREADY),
    .m_axi_port_a_BRESP(2'd0),
    .m_axi_port_a_BID(1'd0),
    .m_axi_port_a_BUSER(1'd0),
    .a(a),
    .a_cache_0_address0(readA_U0_a_cache_0_address0),
    .a_cache_0_ce0(readA_U0_a_cache_0_ce0),
    .a_cache_0_we0(readA_U0_a_cache_0_we0),
    .a_cache_0_d0(readA_U0_a_cache_0_d0),
    .a_cache_1_address0(readA_U0_a_cache_1_address0),
    .a_cache_1_ce0(readA_U0_a_cache_1_ce0),
    .a_cache_1_we0(readA_U0_a_cache_1_we0),
    .a_cache_1_d0(readA_U0_a_cache_1_d0),
    .a_cache_2_address0(readA_U0_a_cache_2_address0),
    .a_cache_2_ce0(readA_U0_a_cache_2_ce0),
    .a_cache_2_we0(readA_U0_a_cache_2_we0),
    .a_cache_2_d0(readA_U0_a_cache_2_d0),
    .a_cache_3_address0(readA_U0_a_cache_3_address0),
    .a_cache_3_ce0(readA_U0_a_cache_3_ce0),
    .a_cache_3_we0(readA_U0_a_cache_3_we0),
    .a_cache_3_d0(readA_U0_a_cache_3_d0),
    .a_cache_4_address0(readA_U0_a_cache_4_address0),
    .a_cache_4_ce0(readA_U0_a_cache_4_ce0),
    .a_cache_4_we0(readA_U0_a_cache_4_we0),
    .a_cache_4_d0(readA_U0_a_cache_4_d0),
    .a_cache_5_address0(readA_U0_a_cache_5_address0),
    .a_cache_5_ce0(readA_U0_a_cache_5_ce0),
    .a_cache_5_we0(readA_U0_a_cache_5_we0),
    .a_cache_5_d0(readA_U0_a_cache_5_d0)
);

tiled_mm_writehfifo writehfifo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(writehfifo_U0_ap_start),
    .start_full_n(start_for_tn_loop_proc_U0_full_n),
    .ap_done(writehfifo_U0_ap_done),
    .ap_continue(writehfifo_U0_ap_continue),
    .ap_idle(writehfifo_U0_ap_idle),
    .ap_ready(writehfifo_U0_ap_ready),
    .h_fifo_0_0_din(writehfifo_U0_h_fifo_0_0_din),
    .h_fifo_0_0_num_data_valid(h_fifo_num_data_valid),
    .h_fifo_0_0_fifo_cap(h_fifo_fifo_cap),
    .h_fifo_0_0_full_n(h_fifo_full_n),
    .h_fifo_0_0_write(writehfifo_U0_h_fifo_0_0_write),
    .h_fifo_1_0_din(writehfifo_U0_h_fifo_1_0_din),
    .h_fifo_1_0_num_data_valid(h_fifo_1_num_data_valid),
    .h_fifo_1_0_fifo_cap(h_fifo_1_fifo_cap),
    .h_fifo_1_0_full_n(h_fifo_1_full_n),
    .h_fifo_1_0_write(writehfifo_U0_h_fifo_1_0_write),
    .h_fifo_2_0_din(writehfifo_U0_h_fifo_2_0_din),
    .h_fifo_2_0_num_data_valid(h_fifo_2_num_data_valid),
    .h_fifo_2_0_fifo_cap(h_fifo_2_fifo_cap),
    .h_fifo_2_0_full_n(h_fifo_2_full_n),
    .h_fifo_2_0_write(writehfifo_U0_h_fifo_2_0_write),
    .h_fifo_3_0_din(writehfifo_U0_h_fifo_3_0_din),
    .h_fifo_3_0_num_data_valid(h_fifo_3_num_data_valid),
    .h_fifo_3_0_fifo_cap(h_fifo_3_fifo_cap),
    .h_fifo_3_0_full_n(h_fifo_3_full_n),
    .h_fifo_3_0_write(writehfifo_U0_h_fifo_3_0_write),
    .h_fifo_4_0_din(writehfifo_U0_h_fifo_4_0_din),
    .h_fifo_4_0_num_data_valid(h_fifo_4_num_data_valid),
    .h_fifo_4_0_fifo_cap(h_fifo_4_fifo_cap),
    .h_fifo_4_0_full_n(h_fifo_4_full_n),
    .h_fifo_4_0_write(writehfifo_U0_h_fifo_4_0_write),
    .h_fifo_5_0_din(writehfifo_U0_h_fifo_5_0_din),
    .h_fifo_5_0_num_data_valid(h_fifo_5_num_data_valid),
    .h_fifo_5_0_fifo_cap(h_fifo_5_fifo_cap),
    .h_fifo_5_0_full_n(h_fifo_5_full_n),
    .h_fifo_5_0_write(writehfifo_U0_h_fifo_5_0_write),
    .start_out(writehfifo_U0_start_out),
    .start_write(writehfifo_U0_start_write),
    .a_cache_0_address0(writehfifo_U0_a_cache_0_address0),
    .a_cache_0_ce0(writehfifo_U0_a_cache_0_ce0),
    .a_cache_0_q0(a_cache_t_q0),
    .a_cache_1_address0(writehfifo_U0_a_cache_1_address0),
    .a_cache_1_ce0(writehfifo_U0_a_cache_1_ce0),
    .a_cache_1_q0(a_cache_1_t_q0),
    .a_cache_2_address0(writehfifo_U0_a_cache_2_address0),
    .a_cache_2_ce0(writehfifo_U0_a_cache_2_ce0),
    .a_cache_2_q0(a_cache_2_t_q0),
    .a_cache_3_address0(writehfifo_U0_a_cache_3_address0),
    .a_cache_3_ce0(writehfifo_U0_a_cache_3_ce0),
    .a_cache_3_q0(a_cache_3_t_q0),
    .a_cache_4_address0(writehfifo_U0_a_cache_4_address0),
    .a_cache_4_ce0(writehfifo_U0_a_cache_4_ce0),
    .a_cache_4_q0(a_cache_4_t_q0),
    .a_cache_5_address0(writehfifo_U0_a_cache_5_address0),
    .a_cache_5_ce0(writehfifo_U0_a_cache_5_ce0),
    .a_cache_5_q0(a_cache_5_t_q0)
);

tiled_mm_readB readB_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(readB_U0_ap_start),
    .ap_done(readB_U0_ap_done),
    .ap_continue(readB_U0_ap_continue),
    .ap_idle(readB_U0_ap_idle),
    .ap_ready(readB_U0_ap_ready),
    .m_axi_port_b_AWVALID(readB_U0_m_axi_port_b_AWVALID),
    .m_axi_port_b_AWREADY(1'b0),
    .m_axi_port_b_AWADDR(readB_U0_m_axi_port_b_AWADDR),
    .m_axi_port_b_AWID(readB_U0_m_axi_port_b_AWID),
    .m_axi_port_b_AWLEN(readB_U0_m_axi_port_b_AWLEN),
    .m_axi_port_b_AWSIZE(readB_U0_m_axi_port_b_AWSIZE),
    .m_axi_port_b_AWBURST(readB_U0_m_axi_port_b_AWBURST),
    .m_axi_port_b_AWLOCK(readB_U0_m_axi_port_b_AWLOCK),
    .m_axi_port_b_AWCACHE(readB_U0_m_axi_port_b_AWCACHE),
    .m_axi_port_b_AWPROT(readB_U0_m_axi_port_b_AWPROT),
    .m_axi_port_b_AWQOS(readB_U0_m_axi_port_b_AWQOS),
    .m_axi_port_b_AWREGION(readB_U0_m_axi_port_b_AWREGION),
    .m_axi_port_b_AWUSER(readB_U0_m_axi_port_b_AWUSER),
    .m_axi_port_b_WVALID(readB_U0_m_axi_port_b_WVALID),
    .m_axi_port_b_WREADY(1'b0),
    .m_axi_port_b_WDATA(readB_U0_m_axi_port_b_WDATA),
    .m_axi_port_b_WSTRB(readB_U0_m_axi_port_b_WSTRB),
    .m_axi_port_b_WLAST(readB_U0_m_axi_port_b_WLAST),
    .m_axi_port_b_WID(readB_U0_m_axi_port_b_WID),
    .m_axi_port_b_WUSER(readB_U0_m_axi_port_b_WUSER),
    .m_axi_port_b_ARVALID(readB_U0_m_axi_port_b_ARVALID),
    .m_axi_port_b_ARREADY(m_axi_port_b_ARREADY),
    .m_axi_port_b_ARADDR(readB_U0_m_axi_port_b_ARADDR),
    .m_axi_port_b_ARID(readB_U0_m_axi_port_b_ARID),
    .m_axi_port_b_ARLEN(readB_U0_m_axi_port_b_ARLEN),
    .m_axi_port_b_ARSIZE(readB_U0_m_axi_port_b_ARSIZE),
    .m_axi_port_b_ARBURST(readB_U0_m_axi_port_b_ARBURST),
    .m_axi_port_b_ARLOCK(readB_U0_m_axi_port_b_ARLOCK),
    .m_axi_port_b_ARCACHE(readB_U0_m_axi_port_b_ARCACHE),
    .m_axi_port_b_ARPROT(readB_U0_m_axi_port_b_ARPROT),
    .m_axi_port_b_ARQOS(readB_U0_m_axi_port_b_ARQOS),
    .m_axi_port_b_ARREGION(readB_U0_m_axi_port_b_ARREGION),
    .m_axi_port_b_ARUSER(readB_U0_m_axi_port_b_ARUSER),
    .m_axi_port_b_RVALID(m_axi_port_b_RVALID),
    .m_axi_port_b_RREADY(readB_U0_m_axi_port_b_RREADY),
    .m_axi_port_b_RDATA(m_axi_port_b_RDATA),
    .m_axi_port_b_RLAST(m_axi_port_b_RLAST),
    .m_axi_port_b_RID(m_axi_port_b_RID),
    .m_axi_port_b_RFIFONUM(m_axi_port_b_RFIFONUM),
    .m_axi_port_b_RUSER(m_axi_port_b_RUSER),
    .m_axi_port_b_RRESP(m_axi_port_b_RRESP),
    .m_axi_port_b_BVALID(1'b0),
    .m_axi_port_b_BREADY(readB_U0_m_axi_port_b_BREADY),
    .m_axi_port_b_BRESP(2'd0),
    .m_axi_port_b_BID(1'd0),
    .m_axi_port_b_BUSER(1'd0),
    .b(b),
    .b_cache_0_address0(readB_U0_b_cache_0_address0),
    .b_cache_0_ce0(readB_U0_b_cache_0_ce0),
    .b_cache_0_we0(readB_U0_b_cache_0_we0),
    .b_cache_0_d0(readB_U0_b_cache_0_d0),
    .b_cache_1_address0(readB_U0_b_cache_1_address0),
    .b_cache_1_ce0(readB_U0_b_cache_1_ce0),
    .b_cache_1_we0(readB_U0_b_cache_1_we0),
    .b_cache_1_d0(readB_U0_b_cache_1_d0),
    .b_cache_2_address0(readB_U0_b_cache_2_address0),
    .b_cache_2_ce0(readB_U0_b_cache_2_ce0),
    .b_cache_2_we0(readB_U0_b_cache_2_we0),
    .b_cache_2_d0(readB_U0_b_cache_2_d0),
    .b_cache_3_address0(readB_U0_b_cache_3_address0),
    .b_cache_3_ce0(readB_U0_b_cache_3_ce0),
    .b_cache_3_we0(readB_U0_b_cache_3_we0),
    .b_cache_3_d0(readB_U0_b_cache_3_d0),
    .b_cache_4_address0(readB_U0_b_cache_4_address0),
    .b_cache_4_ce0(readB_U0_b_cache_4_ce0),
    .b_cache_4_we0(readB_U0_b_cache_4_we0),
    .b_cache_4_d0(readB_U0_b_cache_4_d0),
    .b_cache_5_address0(readB_U0_b_cache_5_address0),
    .b_cache_5_ce0(readB_U0_b_cache_5_ce0),
    .b_cache_5_we0(readB_U0_b_cache_5_we0),
    .b_cache_5_d0(readB_U0_b_cache_5_d0),
    .tn(tn),
    .tn_c_din(readB_U0_tn_c_din),
    .tn_c_num_data_valid(tn_c_num_data_valid),
    .tn_c_fifo_cap(tn_c_fifo_cap),
    .tn_c_full_n(tn_c_full_n),
    .tn_c_write(readB_U0_tn_c_write)
);

tiled_mm_writevfifo writevfifo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(writevfifo_U0_ap_start),
    .ap_done(writevfifo_U0_ap_done),
    .ap_continue(writevfifo_U0_ap_continue),
    .ap_idle(writevfifo_U0_ap_idle),
    .ap_ready(writevfifo_U0_ap_ready),
    .v_fifo_0_0_din(writevfifo_U0_v_fifo_0_0_din),
    .v_fifo_0_0_num_data_valid(v_fifo_num_data_valid),
    .v_fifo_0_0_fifo_cap(v_fifo_fifo_cap),
    .v_fifo_0_0_full_n(v_fifo_full_n),
    .v_fifo_0_0_write(writevfifo_U0_v_fifo_0_0_write),
    .v_fifo_0_1_din(writevfifo_U0_v_fifo_0_1_din),
    .v_fifo_0_1_num_data_valid(v_fifo_1_num_data_valid),
    .v_fifo_0_1_fifo_cap(v_fifo_1_fifo_cap),
    .v_fifo_0_1_full_n(v_fifo_1_full_n),
    .v_fifo_0_1_write(writevfifo_U0_v_fifo_0_1_write),
    .v_fifo_0_2_din(writevfifo_U0_v_fifo_0_2_din),
    .v_fifo_0_2_num_data_valid(v_fifo_2_num_data_valid),
    .v_fifo_0_2_fifo_cap(v_fifo_2_fifo_cap),
    .v_fifo_0_2_full_n(v_fifo_2_full_n),
    .v_fifo_0_2_write(writevfifo_U0_v_fifo_0_2_write),
    .v_fifo_0_3_din(writevfifo_U0_v_fifo_0_3_din),
    .v_fifo_0_3_num_data_valid(v_fifo_3_num_data_valid),
    .v_fifo_0_3_fifo_cap(v_fifo_3_fifo_cap),
    .v_fifo_0_3_full_n(v_fifo_3_full_n),
    .v_fifo_0_3_write(writevfifo_U0_v_fifo_0_3_write),
    .v_fifo_0_4_din(writevfifo_U0_v_fifo_0_4_din),
    .v_fifo_0_4_num_data_valid(v_fifo_4_num_data_valid),
    .v_fifo_0_4_fifo_cap(v_fifo_4_fifo_cap),
    .v_fifo_0_4_full_n(v_fifo_4_full_n),
    .v_fifo_0_4_write(writevfifo_U0_v_fifo_0_4_write),
    .v_fifo_0_5_din(writevfifo_U0_v_fifo_0_5_din),
    .v_fifo_0_5_num_data_valid(v_fifo_5_num_data_valid),
    .v_fifo_0_5_fifo_cap(v_fifo_5_fifo_cap),
    .v_fifo_0_5_full_n(v_fifo_5_full_n),
    .v_fifo_0_5_write(writevfifo_U0_v_fifo_0_5_write),
    .b_cache_0_address0(writevfifo_U0_b_cache_0_address0),
    .b_cache_0_ce0(writevfifo_U0_b_cache_0_ce0),
    .b_cache_0_q0(b_cache_t_q0),
    .b_cache_1_address0(writevfifo_U0_b_cache_1_address0),
    .b_cache_1_ce0(writevfifo_U0_b_cache_1_ce0),
    .b_cache_1_q0(b_cache_1_t_q0),
    .b_cache_2_address0(writevfifo_U0_b_cache_2_address0),
    .b_cache_2_ce0(writevfifo_U0_b_cache_2_ce0),
    .b_cache_2_q0(b_cache_2_t_q0),
    .b_cache_3_address0(writevfifo_U0_b_cache_3_address0),
    .b_cache_3_ce0(writevfifo_U0_b_cache_3_ce0),
    .b_cache_3_q0(b_cache_3_t_q0),
    .b_cache_4_address0(writevfifo_U0_b_cache_4_address0),
    .b_cache_4_ce0(writevfifo_U0_b_cache_4_ce0),
    .b_cache_4_q0(b_cache_4_t_q0),
    .b_cache_5_address0(writevfifo_U0_b_cache_5_address0),
    .b_cache_5_ce0(writevfifo_U0_b_cache_5_ce0),
    .b_cache_5_q0(b_cache_5_t_q0)
);

tiled_mm_tn_loop_proc tn_loop_proc_U0(
    .h_fifo_dout(h_fifo_dout),
    .h_fifo_empty_n(h_fifo_empty_n),
    .h_fifo_read(tn_loop_proc_U0_h_fifo_read),
    .v_fifo_dout(v_fifo_dout),
    .v_fifo_empty_n(v_fifo_empty_n),
    .v_fifo_read(tn_loop_proc_U0_v_fifo_read),
    .v_fifo_1_dout(v_fifo_1_dout),
    .v_fifo_1_empty_n(v_fifo_1_empty_n),
    .v_fifo_1_read(tn_loop_proc_U0_v_fifo_1_read),
    .v_fifo_2_dout(v_fifo_2_dout),
    .v_fifo_2_empty_n(v_fifo_2_empty_n),
    .v_fifo_2_read(tn_loop_proc_U0_v_fifo_2_read),
    .v_fifo_3_dout(v_fifo_3_dout),
    .v_fifo_3_empty_n(v_fifo_3_empty_n),
    .v_fifo_3_read(tn_loop_proc_U0_v_fifo_3_read),
    .v_fifo_4_dout(v_fifo_4_dout),
    .v_fifo_4_empty_n(v_fifo_4_empty_n),
    .v_fifo_4_read(tn_loop_proc_U0_v_fifo_4_read),
    .v_fifo_5_dout(v_fifo_5_dout),
    .v_fifo_5_empty_n(v_fifo_5_empty_n),
    .v_fifo_5_read(tn_loop_proc_U0_v_fifo_5_read),
    .h_fifo_1_dout(h_fifo_1_dout),
    .h_fifo_1_empty_n(h_fifo_1_empty_n),
    .h_fifo_1_read(tn_loop_proc_U0_h_fifo_1_read),
    .h_fifo_2_dout(h_fifo_2_dout),
    .h_fifo_2_empty_n(h_fifo_2_empty_n),
    .h_fifo_2_read(tn_loop_proc_U0_h_fifo_2_read),
    .h_fifo_3_dout(h_fifo_3_dout),
    .h_fifo_3_empty_n(h_fifo_3_empty_n),
    .h_fifo_3_read(tn_loop_proc_U0_h_fifo_3_read),
    .h_fifo_4_dout(h_fifo_4_dout),
    .h_fifo_4_empty_n(h_fifo_4_empty_n),
    .h_fifo_4_read(tn_loop_proc_U0_h_fifo_4_read),
    .h_fifo_5_dout(h_fifo_5_dout),
    .h_fifo_5_empty_n(h_fifo_5_empty_n),
    .h_fifo_5_read(tn_loop_proc_U0_h_fifo_5_read),
    .Cstream_din(tn_loop_proc_U0_Cstream_din),
    .Cstream_full_n(Cstream_full_n),
    .Cstream_write(tn_loop_proc_U0_Cstream_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(tn_loop_proc_U0_ap_start),
    .ap_done(tn_loop_proc_U0_ap_done),
    .ap_ready(tn_loop_proc_U0_ap_ready),
    .ap_idle(tn_loop_proc_U0_ap_idle),
    .ap_continue(tn_loop_proc_U0_ap_continue)
);

tiled_mm_writeC writeC_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(writeC_U0_ap_start),
    .ap_done(writeC_U0_ap_done),
    .ap_continue(writeC_U0_ap_continue),
    .ap_idle(writeC_U0_ap_idle),
    .ap_ready(writeC_U0_ap_ready),
    .m_axi_port_c_AWVALID(writeC_U0_m_axi_port_c_AWVALID),
    .m_axi_port_c_AWREADY(m_axi_port_c_AWREADY),
    .m_axi_port_c_AWADDR(writeC_U0_m_axi_port_c_AWADDR),
    .m_axi_port_c_AWID(writeC_U0_m_axi_port_c_AWID),
    .m_axi_port_c_AWLEN(writeC_U0_m_axi_port_c_AWLEN),
    .m_axi_port_c_AWSIZE(writeC_U0_m_axi_port_c_AWSIZE),
    .m_axi_port_c_AWBURST(writeC_U0_m_axi_port_c_AWBURST),
    .m_axi_port_c_AWLOCK(writeC_U0_m_axi_port_c_AWLOCK),
    .m_axi_port_c_AWCACHE(writeC_U0_m_axi_port_c_AWCACHE),
    .m_axi_port_c_AWPROT(writeC_U0_m_axi_port_c_AWPROT),
    .m_axi_port_c_AWQOS(writeC_U0_m_axi_port_c_AWQOS),
    .m_axi_port_c_AWREGION(writeC_U0_m_axi_port_c_AWREGION),
    .m_axi_port_c_AWUSER(writeC_U0_m_axi_port_c_AWUSER),
    .m_axi_port_c_WVALID(writeC_U0_m_axi_port_c_WVALID),
    .m_axi_port_c_WREADY(m_axi_port_c_WREADY),
    .m_axi_port_c_WDATA(writeC_U0_m_axi_port_c_WDATA),
    .m_axi_port_c_WSTRB(writeC_U0_m_axi_port_c_WSTRB),
    .m_axi_port_c_WLAST(writeC_U0_m_axi_port_c_WLAST),
    .m_axi_port_c_WID(writeC_U0_m_axi_port_c_WID),
    .m_axi_port_c_WUSER(writeC_U0_m_axi_port_c_WUSER),
    .m_axi_port_c_ARVALID(writeC_U0_m_axi_port_c_ARVALID),
    .m_axi_port_c_ARREADY(1'b0),
    .m_axi_port_c_ARADDR(writeC_U0_m_axi_port_c_ARADDR),
    .m_axi_port_c_ARID(writeC_U0_m_axi_port_c_ARID),
    .m_axi_port_c_ARLEN(writeC_U0_m_axi_port_c_ARLEN),
    .m_axi_port_c_ARSIZE(writeC_U0_m_axi_port_c_ARSIZE),
    .m_axi_port_c_ARBURST(writeC_U0_m_axi_port_c_ARBURST),
    .m_axi_port_c_ARLOCK(writeC_U0_m_axi_port_c_ARLOCK),
    .m_axi_port_c_ARCACHE(writeC_U0_m_axi_port_c_ARCACHE),
    .m_axi_port_c_ARPROT(writeC_U0_m_axi_port_c_ARPROT),
    .m_axi_port_c_ARQOS(writeC_U0_m_axi_port_c_ARQOS),
    .m_axi_port_c_ARREGION(writeC_U0_m_axi_port_c_ARREGION),
    .m_axi_port_c_ARUSER(writeC_U0_m_axi_port_c_ARUSER),
    .m_axi_port_c_RVALID(1'b0),
    .m_axi_port_c_RREADY(writeC_U0_m_axi_port_c_RREADY),
    .m_axi_port_c_RDATA(8'd0),
    .m_axi_port_c_RLAST(1'b0),
    .m_axi_port_c_RID(1'd0),
    .m_axi_port_c_RFIFONUM(11'd0),
    .m_axi_port_c_RUSER(1'd0),
    .m_axi_port_c_RRESP(2'd0),
    .m_axi_port_c_BVALID(m_axi_port_c_BVALID),
    .m_axi_port_c_BREADY(writeC_U0_m_axi_port_c_BREADY),
    .m_axi_port_c_BRESP(m_axi_port_c_BRESP),
    .m_axi_port_c_BID(m_axi_port_c_BID),
    .m_axi_port_c_BUSER(m_axi_port_c_BUSER),
    .out_r_dout(out_c_dout),
    .out_r_num_data_valid(out_c_num_data_valid),
    .out_r_fifo_cap(out_c_fifo_cap),
    .out_r_empty_n(out_c_empty_n),
    .out_r_read(writeC_U0_out_r_read),
    .Cstream_dout(Cstream_dout),
    .Cstream_num_data_valid(Cstream_num_data_valid),
    .Cstream_fifo_cap(Cstream_fifo_cap),
    .Cstream_empty_n(Cstream_empty_n),
    .Cstream_read(writeC_U0_Cstream_read),
    .tn_dout(tn_c_dout),
    .tn_num_data_valid(tn_c_num_data_valid),
    .tn_fifo_cap(tn_c_fifo_cap),
    .tn_empty_n(tn_c_empty_n),
    .tn_read(writeC_U0_tn_read)
);

tiled_mm_fifo_w64_d5_S out_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_out_c_din),
    .if_full_n(out_c_full_n),
    .if_write(entry_proc_U0_out_c_write),
    .if_dout(out_c_dout),
    .if_num_data_valid(out_c_num_data_valid),
    .if_fifo_cap(out_c_fifo_cap),
    .if_empty_n(out_c_empty_n),
    .if_read(writeC_U0_out_r_read)
);

tiled_mm_fifo_w16_d2_S_x h_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writehfifo_U0_h_fifo_0_0_din),
    .if_full_n(h_fifo_full_n),
    .if_write(writehfifo_U0_h_fifo_0_0_write),
    .if_dout(h_fifo_dout),
    .if_num_data_valid(h_fifo_num_data_valid),
    .if_fifo_cap(h_fifo_fifo_cap),
    .if_empty_n(h_fifo_empty_n),
    .if_read(tn_loop_proc_U0_h_fifo_read)
);

tiled_mm_fifo_w16_d2_S_x h_fifo_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writehfifo_U0_h_fifo_1_0_din),
    .if_full_n(h_fifo_1_full_n),
    .if_write(writehfifo_U0_h_fifo_1_0_write),
    .if_dout(h_fifo_1_dout),
    .if_num_data_valid(h_fifo_1_num_data_valid),
    .if_fifo_cap(h_fifo_1_fifo_cap),
    .if_empty_n(h_fifo_1_empty_n),
    .if_read(tn_loop_proc_U0_h_fifo_1_read)
);

tiled_mm_fifo_w16_d2_S_x h_fifo_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writehfifo_U0_h_fifo_2_0_din),
    .if_full_n(h_fifo_2_full_n),
    .if_write(writehfifo_U0_h_fifo_2_0_write),
    .if_dout(h_fifo_2_dout),
    .if_num_data_valid(h_fifo_2_num_data_valid),
    .if_fifo_cap(h_fifo_2_fifo_cap),
    .if_empty_n(h_fifo_2_empty_n),
    .if_read(tn_loop_proc_U0_h_fifo_2_read)
);

tiled_mm_fifo_w16_d2_S_x h_fifo_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writehfifo_U0_h_fifo_3_0_din),
    .if_full_n(h_fifo_3_full_n),
    .if_write(writehfifo_U0_h_fifo_3_0_write),
    .if_dout(h_fifo_3_dout),
    .if_num_data_valid(h_fifo_3_num_data_valid),
    .if_fifo_cap(h_fifo_3_fifo_cap),
    .if_empty_n(h_fifo_3_empty_n),
    .if_read(tn_loop_proc_U0_h_fifo_3_read)
);

tiled_mm_fifo_w16_d2_S_x h_fifo_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writehfifo_U0_h_fifo_4_0_din),
    .if_full_n(h_fifo_4_full_n),
    .if_write(writehfifo_U0_h_fifo_4_0_write),
    .if_dout(h_fifo_4_dout),
    .if_num_data_valid(h_fifo_4_num_data_valid),
    .if_fifo_cap(h_fifo_4_fifo_cap),
    .if_empty_n(h_fifo_4_empty_n),
    .if_read(tn_loop_proc_U0_h_fifo_4_read)
);

tiled_mm_fifo_w16_d2_S_x h_fifo_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writehfifo_U0_h_fifo_5_0_din),
    .if_full_n(h_fifo_5_full_n),
    .if_write(writehfifo_U0_h_fifo_5_0_write),
    .if_dout(h_fifo_5_dout),
    .if_num_data_valid(h_fifo_5_num_data_valid),
    .if_fifo_cap(h_fifo_5_fifo_cap),
    .if_empty_n(h_fifo_5_empty_n),
    .if_read(tn_loop_proc_U0_h_fifo_5_read)
);

tiled_mm_fifo_w3_d4_S tn_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(readB_U0_tn_c_din),
    .if_full_n(tn_c_full_n),
    .if_write(readB_U0_tn_c_write),
    .if_dout(tn_c_dout),
    .if_num_data_valid(tn_c_num_data_valid),
    .if_fifo_cap(tn_c_fifo_cap),
    .if_empty_n(tn_c_empty_n),
    .if_read(writeC_U0_tn_read)
);

tiled_mm_fifo_w16_d2_S_x v_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writevfifo_U0_v_fifo_0_0_din),
    .if_full_n(v_fifo_full_n),
    .if_write(writevfifo_U0_v_fifo_0_0_write),
    .if_dout(v_fifo_dout),
    .if_num_data_valid(v_fifo_num_data_valid),
    .if_fifo_cap(v_fifo_fifo_cap),
    .if_empty_n(v_fifo_empty_n),
    .if_read(tn_loop_proc_U0_v_fifo_read)
);

tiled_mm_fifo_w16_d2_S_x v_fifo_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writevfifo_U0_v_fifo_0_1_din),
    .if_full_n(v_fifo_1_full_n),
    .if_write(writevfifo_U0_v_fifo_0_1_write),
    .if_dout(v_fifo_1_dout),
    .if_num_data_valid(v_fifo_1_num_data_valid),
    .if_fifo_cap(v_fifo_1_fifo_cap),
    .if_empty_n(v_fifo_1_empty_n),
    .if_read(tn_loop_proc_U0_v_fifo_1_read)
);

tiled_mm_fifo_w16_d2_S_x v_fifo_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writevfifo_U0_v_fifo_0_2_din),
    .if_full_n(v_fifo_2_full_n),
    .if_write(writevfifo_U0_v_fifo_0_2_write),
    .if_dout(v_fifo_2_dout),
    .if_num_data_valid(v_fifo_2_num_data_valid),
    .if_fifo_cap(v_fifo_2_fifo_cap),
    .if_empty_n(v_fifo_2_empty_n),
    .if_read(tn_loop_proc_U0_v_fifo_2_read)
);

tiled_mm_fifo_w16_d2_S_x v_fifo_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writevfifo_U0_v_fifo_0_3_din),
    .if_full_n(v_fifo_3_full_n),
    .if_write(writevfifo_U0_v_fifo_0_3_write),
    .if_dout(v_fifo_3_dout),
    .if_num_data_valid(v_fifo_3_num_data_valid),
    .if_fifo_cap(v_fifo_3_fifo_cap),
    .if_empty_n(v_fifo_3_empty_n),
    .if_read(tn_loop_proc_U0_v_fifo_3_read)
);

tiled_mm_fifo_w16_d2_S_x v_fifo_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writevfifo_U0_v_fifo_0_4_din),
    .if_full_n(v_fifo_4_full_n),
    .if_write(writevfifo_U0_v_fifo_0_4_write),
    .if_dout(v_fifo_4_dout),
    .if_num_data_valid(v_fifo_4_num_data_valid),
    .if_fifo_cap(v_fifo_4_fifo_cap),
    .if_empty_n(v_fifo_4_empty_n),
    .if_read(tn_loop_proc_U0_v_fifo_4_read)
);

tiled_mm_fifo_w16_d2_S_x v_fifo_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writevfifo_U0_v_fifo_0_5_din),
    .if_full_n(v_fifo_5_full_n),
    .if_write(writevfifo_U0_v_fifo_0_5_write),
    .if_dout(v_fifo_5_dout),
    .if_num_data_valid(v_fifo_5_num_data_valid),
    .if_fifo_cap(v_fifo_5_fifo_cap),
    .if_empty_n(v_fifo_5_empty_n),
    .if_read(tn_loop_proc_U0_v_fifo_5_read)
);

tiled_mm_fifo_w8_d2_S_x Cstream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tn_loop_proc_U0_Cstream_din),
    .if_full_n(Cstream_full_n),
    .if_write(tn_loop_proc_U0_Cstream_write),
    .if_dout(Cstream_dout),
    .if_num_data_valid(Cstream_num_data_valid),
    .if_fifo_cap(Cstream_fifo_cap),
    .if_empty_n(Cstream_empty_n),
    .if_read(writeC_U0_Cstream_read)
);

tiled_mm_start_for_writeC_U0 start_for_writeC_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_writeC_U0_din),
    .if_full_n(start_for_writeC_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_writeC_U0_dout),
    .if_empty_n(start_for_writeC_U0_empty_n),
    .if_read(writeC_U0_ap_ready)
);

tiled_mm_start_for_tn_loop_proc_U0 start_for_tn_loop_proc_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_tn_loop_proc_U0_din),
    .if_full_n(start_for_tn_loop_proc_U0_full_n),
    .if_write(writehfifo_U0_start_write),
    .if_dout(start_for_tn_loop_proc_U0_dout),
    .if_empty_n(start_for_tn_loop_proc_U0_empty_n),
    .if_read(tn_loop_proc_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_a_cache <= 1'b0;
    end else begin
        if (((readA_U0_ap_done & readA_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_a_cache <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_a_cache <= ap_sync_channel_write_a_cache;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_a_cache_1 <= 1'b0;
    end else begin
        if (((readA_U0_ap_done & readA_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_a_cache_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_a_cache_1 <= ap_sync_channel_write_a_cache_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_a_cache_2 <= 1'b0;
    end else begin
        if (((readA_U0_ap_done & readA_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_a_cache_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_a_cache_2 <= ap_sync_channel_write_a_cache_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_a_cache_3 <= 1'b0;
    end else begin
        if (((readA_U0_ap_done & readA_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_a_cache_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_a_cache_3 <= ap_sync_channel_write_a_cache_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_a_cache_4 <= 1'b0;
    end else begin
        if (((readA_U0_ap_done & readA_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_a_cache_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_a_cache_4 <= ap_sync_channel_write_a_cache_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_a_cache_5 <= 1'b0;
    end else begin
        if (((readA_U0_ap_done & readA_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_a_cache_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_a_cache_5 <= ap_sync_channel_write_a_cache_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_b_cache <= 1'b0;
    end else begin
        if (((readB_U0_ap_done & readB_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_b_cache <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_b_cache <= ap_sync_channel_write_b_cache;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_b_cache_1 <= 1'b0;
    end else begin
        if (((readB_U0_ap_done & readB_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_b_cache_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_b_cache_1 <= ap_sync_channel_write_b_cache_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_b_cache_2 <= 1'b0;
    end else begin
        if (((readB_U0_ap_done & readB_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_b_cache_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_b_cache_2 <= ap_sync_channel_write_b_cache_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_b_cache_3 <= 1'b0;
    end else begin
        if (((readB_U0_ap_done & readB_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_b_cache_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_b_cache_3 <= ap_sync_channel_write_b_cache_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_b_cache_4 <= 1'b0;
    end else begin
        if (((readB_U0_ap_done & readB_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_b_cache_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_b_cache_4 <= ap_sync_channel_write_b_cache_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_b_cache_5 <= 1'b0;
    end else begin
        if (((readB_U0_ap_done & readB_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_b_cache_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_b_cache_5 <= ap_sync_channel_write_b_cache_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_readA_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_readA_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_readA_U0_ap_ready <= ap_sync_readA_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_readB_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_readB_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_readB_U0_ap_ready <= ap_sync_readB_U0_ap_ready;
        end
    end
end

assign ap_channel_done_a_cache = (readA_U0_ap_done & (ap_sync_reg_channel_write_a_cache ^ 1'b1));

assign ap_channel_done_a_cache_1 = (readA_U0_ap_done & (ap_sync_reg_channel_write_a_cache_1 ^ 1'b1));

assign ap_channel_done_a_cache_2 = (readA_U0_ap_done & (ap_sync_reg_channel_write_a_cache_2 ^ 1'b1));

assign ap_channel_done_a_cache_3 = (readA_U0_ap_done & (ap_sync_reg_channel_write_a_cache_3 ^ 1'b1));

assign ap_channel_done_a_cache_4 = (readA_U0_ap_done & (ap_sync_reg_channel_write_a_cache_4 ^ 1'b1));

assign ap_channel_done_a_cache_5 = (readA_U0_ap_done & (ap_sync_reg_channel_write_a_cache_5 ^ 1'b1));

assign ap_channel_done_b_cache = (readB_U0_ap_done & (ap_sync_reg_channel_write_b_cache ^ 1'b1));

assign ap_channel_done_b_cache_1 = (readB_U0_ap_done & (ap_sync_reg_channel_write_b_cache_1 ^ 1'b1));

assign ap_channel_done_b_cache_2 = (readB_U0_ap_done & (ap_sync_reg_channel_write_b_cache_2 ^ 1'b1));

assign ap_channel_done_b_cache_3 = (readB_U0_ap_done & (ap_sync_reg_channel_write_b_cache_3 ^ 1'b1));

assign ap_channel_done_b_cache_4 = (readB_U0_ap_done & (ap_sync_reg_channel_write_b_cache_4 ^ 1'b1));

assign ap_channel_done_b_cache_5 = (readB_U0_ap_done & (ap_sync_reg_channel_write_b_cache_5 ^ 1'b1));

assign ap_done = writeC_U0_ap_done;

assign ap_idle = (writevfifo_U0_ap_idle & writehfifo_U0_ap_idle & writeC_U0_ap_idle & tn_loop_proc_U0_ap_idle & readB_U0_ap_idle & readA_U0_ap_idle & (b_cache_5_t_empty_n ^ 1'b1) & (b_cache_4_t_empty_n ^ 1'b1) & (b_cache_3_t_empty_n ^ 1'b1) & (b_cache_2_t_empty_n ^ 1'b1) & (b_cache_1_t_empty_n ^ 1'b1) & (b_cache_t_empty_n ^ 1'b1) & (1'b1 ^ a_cache_5_t_empty_n) & (1'b1 ^ a_cache_4_t_empty_n) & (1'b1 ^ a_cache_3_t_empty_n) & (1'b1 ^ a_cache_2_t_empty_n) & (1'b1 ^ a_cache_1_t_empty_n) & (1'b1 ^ a_cache_t_empty_n) & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_a_cache = ((readA_U0_a_cache_0_full_n & ap_channel_done_a_cache) | ap_sync_reg_channel_write_a_cache);

assign ap_sync_channel_write_a_cache_1 = ((readA_U0_a_cache_1_full_n & ap_channel_done_a_cache_1) | ap_sync_reg_channel_write_a_cache_1);

assign ap_sync_channel_write_a_cache_2 = ((readA_U0_a_cache_2_full_n & ap_channel_done_a_cache_2) | ap_sync_reg_channel_write_a_cache_2);

assign ap_sync_channel_write_a_cache_3 = ((readA_U0_a_cache_3_full_n & ap_channel_done_a_cache_3) | ap_sync_reg_channel_write_a_cache_3);

assign ap_sync_channel_write_a_cache_4 = ((readA_U0_a_cache_4_full_n & ap_channel_done_a_cache_4) | ap_sync_reg_channel_write_a_cache_4);

assign ap_sync_channel_write_a_cache_5 = ((readA_U0_a_cache_5_full_n & ap_channel_done_a_cache_5) | ap_sync_reg_channel_write_a_cache_5);

assign ap_sync_channel_write_b_cache = ((readB_U0_b_cache_0_full_n & ap_channel_done_b_cache) | ap_sync_reg_channel_write_b_cache);

assign ap_sync_channel_write_b_cache_1 = ((readB_U0_b_cache_1_full_n & ap_channel_done_b_cache_1) | ap_sync_reg_channel_write_b_cache_1);

assign ap_sync_channel_write_b_cache_2 = ((readB_U0_b_cache_2_full_n & ap_channel_done_b_cache_2) | ap_sync_reg_channel_write_b_cache_2);

assign ap_sync_channel_write_b_cache_3 = ((readB_U0_b_cache_3_full_n & ap_channel_done_b_cache_3) | ap_sync_reg_channel_write_b_cache_3);

assign ap_sync_channel_write_b_cache_4 = ((readB_U0_b_cache_4_full_n & ap_channel_done_b_cache_4) | ap_sync_reg_channel_write_b_cache_4);

assign ap_sync_channel_write_b_cache_5 = ((readB_U0_b_cache_5_full_n & ap_channel_done_b_cache_5) | ap_sync_reg_channel_write_b_cache_5);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_readA_U0_ap_ready = (readA_U0_ap_ready | ap_sync_reg_readA_U0_ap_ready);

assign ap_sync_readB_U0_ap_ready = (readB_U0_ap_ready | ap_sync_reg_readB_U0_ap_ready);

assign ap_sync_ready = (ap_sync_readB_U0_ap_ready & ap_sync_readA_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign m_axi_port_a_ARADDR = readA_U0_m_axi_port_a_ARADDR;

assign m_axi_port_a_ARBURST = readA_U0_m_axi_port_a_ARBURST;

assign m_axi_port_a_ARCACHE = readA_U0_m_axi_port_a_ARCACHE;

assign m_axi_port_a_ARID = readA_U0_m_axi_port_a_ARID;

assign m_axi_port_a_ARLEN = readA_U0_m_axi_port_a_ARLEN;

assign m_axi_port_a_ARLOCK = readA_U0_m_axi_port_a_ARLOCK;

assign m_axi_port_a_ARPROT = readA_U0_m_axi_port_a_ARPROT;

assign m_axi_port_a_ARQOS = readA_U0_m_axi_port_a_ARQOS;

assign m_axi_port_a_ARREGION = readA_U0_m_axi_port_a_ARREGION;

assign m_axi_port_a_ARSIZE = readA_U0_m_axi_port_a_ARSIZE;

assign m_axi_port_a_ARUSER = readA_U0_m_axi_port_a_ARUSER;

assign m_axi_port_a_ARVALID = readA_U0_m_axi_port_a_ARVALID;

assign m_axi_port_a_AWADDR = 64'd0;

assign m_axi_port_a_AWBURST = 2'd0;

assign m_axi_port_a_AWCACHE = 4'd0;

assign m_axi_port_a_AWID = 1'd0;

assign m_axi_port_a_AWLEN = 32'd0;

assign m_axi_port_a_AWLOCK = 2'd0;

assign m_axi_port_a_AWPROT = 3'd0;

assign m_axi_port_a_AWQOS = 4'd0;

assign m_axi_port_a_AWREGION = 4'd0;

assign m_axi_port_a_AWSIZE = 3'd0;

assign m_axi_port_a_AWUSER = 1'd0;

assign m_axi_port_a_AWVALID = 1'b0;

assign m_axi_port_a_BREADY = 1'b0;

assign m_axi_port_a_RREADY = readA_U0_m_axi_port_a_RREADY;

assign m_axi_port_a_WDATA = 8'd0;

assign m_axi_port_a_WID = 1'd0;

assign m_axi_port_a_WLAST = 1'b0;

assign m_axi_port_a_WSTRB = 1'd0;

assign m_axi_port_a_WUSER = 1'd0;

assign m_axi_port_a_WVALID = 1'b0;

assign m_axi_port_b_ARADDR = readB_U0_m_axi_port_b_ARADDR;

assign m_axi_port_b_ARBURST = readB_U0_m_axi_port_b_ARBURST;

assign m_axi_port_b_ARCACHE = readB_U0_m_axi_port_b_ARCACHE;

assign m_axi_port_b_ARID = readB_U0_m_axi_port_b_ARID;

assign m_axi_port_b_ARLEN = readB_U0_m_axi_port_b_ARLEN;

assign m_axi_port_b_ARLOCK = readB_U0_m_axi_port_b_ARLOCK;

assign m_axi_port_b_ARPROT = readB_U0_m_axi_port_b_ARPROT;

assign m_axi_port_b_ARQOS = readB_U0_m_axi_port_b_ARQOS;

assign m_axi_port_b_ARREGION = readB_U0_m_axi_port_b_ARREGION;

assign m_axi_port_b_ARSIZE = readB_U0_m_axi_port_b_ARSIZE;

assign m_axi_port_b_ARUSER = readB_U0_m_axi_port_b_ARUSER;

assign m_axi_port_b_ARVALID = readB_U0_m_axi_port_b_ARVALID;

assign m_axi_port_b_AWADDR = 64'd0;

assign m_axi_port_b_AWBURST = 2'd0;

assign m_axi_port_b_AWCACHE = 4'd0;

assign m_axi_port_b_AWID = 1'd0;

assign m_axi_port_b_AWLEN = 32'd0;

assign m_axi_port_b_AWLOCK = 2'd0;

assign m_axi_port_b_AWPROT = 3'd0;

assign m_axi_port_b_AWQOS = 4'd0;

assign m_axi_port_b_AWREGION = 4'd0;

assign m_axi_port_b_AWSIZE = 3'd0;

assign m_axi_port_b_AWUSER = 1'd0;

assign m_axi_port_b_AWVALID = 1'b0;

assign m_axi_port_b_BREADY = 1'b0;

assign m_axi_port_b_RREADY = readB_U0_m_axi_port_b_RREADY;

assign m_axi_port_b_WDATA = 8'd0;

assign m_axi_port_b_WID = 1'd0;

assign m_axi_port_b_WLAST = 1'b0;

assign m_axi_port_b_WSTRB = 1'd0;

assign m_axi_port_b_WUSER = 1'd0;

assign m_axi_port_b_WVALID = 1'b0;

assign m_axi_port_c_ARADDR = 64'd0;

assign m_axi_port_c_ARBURST = 2'd0;

assign m_axi_port_c_ARCACHE = 4'd0;

assign m_axi_port_c_ARID = 1'd0;

assign m_axi_port_c_ARLEN = 32'd0;

assign m_axi_port_c_ARLOCK = 2'd0;

assign m_axi_port_c_ARPROT = 3'd0;

assign m_axi_port_c_ARQOS = 4'd0;

assign m_axi_port_c_ARREGION = 4'd0;

assign m_axi_port_c_ARSIZE = 3'd0;

assign m_axi_port_c_ARUSER = 1'd0;

assign m_axi_port_c_ARVALID = 1'b0;

assign m_axi_port_c_AWADDR = writeC_U0_m_axi_port_c_AWADDR;

assign m_axi_port_c_AWBURST = writeC_U0_m_axi_port_c_AWBURST;

assign m_axi_port_c_AWCACHE = writeC_U0_m_axi_port_c_AWCACHE;

assign m_axi_port_c_AWID = writeC_U0_m_axi_port_c_AWID;

assign m_axi_port_c_AWLEN = writeC_U0_m_axi_port_c_AWLEN;

assign m_axi_port_c_AWLOCK = writeC_U0_m_axi_port_c_AWLOCK;

assign m_axi_port_c_AWPROT = writeC_U0_m_axi_port_c_AWPROT;

assign m_axi_port_c_AWQOS = writeC_U0_m_axi_port_c_AWQOS;

assign m_axi_port_c_AWREGION = writeC_U0_m_axi_port_c_AWREGION;

assign m_axi_port_c_AWSIZE = writeC_U0_m_axi_port_c_AWSIZE;

assign m_axi_port_c_AWUSER = writeC_U0_m_axi_port_c_AWUSER;

assign m_axi_port_c_AWVALID = writeC_U0_m_axi_port_c_AWVALID;

assign m_axi_port_c_BREADY = writeC_U0_m_axi_port_c_BREADY;

assign m_axi_port_c_RREADY = 1'b0;

assign m_axi_port_c_WDATA = writeC_U0_m_axi_port_c_WDATA;

assign m_axi_port_c_WID = writeC_U0_m_axi_port_c_WID;

assign m_axi_port_c_WLAST = writeC_U0_m_axi_port_c_WLAST;

assign m_axi_port_c_WSTRB = writeC_U0_m_axi_port_c_WSTRB;

assign m_axi_port_c_WUSER = writeC_U0_m_axi_port_c_WUSER;

assign m_axi_port_c_WVALID = writeC_U0_m_axi_port_c_WVALID;

assign readA_U0_a_cache_0_full_n = a_cache_i_full_n;

assign readA_U0_a_cache_1_full_n = a_cache_1_i_full_n;

assign readA_U0_a_cache_2_full_n = a_cache_2_i_full_n;

assign readA_U0_a_cache_3_full_n = a_cache_3_i_full_n;

assign readA_U0_a_cache_4_full_n = a_cache_4_i_full_n;

assign readA_U0_a_cache_5_full_n = a_cache_5_i_full_n;

assign readA_U0_ap_continue = (ap_sync_channel_write_a_cache_5 & ap_sync_channel_write_a_cache_4 & ap_sync_channel_write_a_cache_3 & ap_sync_channel_write_a_cache_2 & ap_sync_channel_write_a_cache_1 & ap_sync_channel_write_a_cache);

assign readA_U0_ap_start = ((ap_sync_reg_readA_U0_ap_ready ^ 1'b1) & ap_start);

assign readB_U0_ap_continue = (ap_sync_channel_write_b_cache_5 & ap_sync_channel_write_b_cache_4 & ap_sync_channel_write_b_cache_3 & ap_sync_channel_write_b_cache_2 & ap_sync_channel_write_b_cache_1 & ap_sync_channel_write_b_cache);

assign readB_U0_ap_start = ((ap_sync_reg_readB_U0_ap_ready ^ 1'b1) & ap_start);

assign readB_U0_b_cache_0_full_n = b_cache_i_full_n;

assign readB_U0_b_cache_1_full_n = b_cache_1_i_full_n;

assign readB_U0_b_cache_2_full_n = b_cache_2_i_full_n;

assign readB_U0_b_cache_3_full_n = b_cache_3_i_full_n;

assign readB_U0_b_cache_4_full_n = b_cache_4_i_full_n;

assign readB_U0_b_cache_5_full_n = b_cache_5_i_full_n;

assign start_for_tn_loop_proc_U0_din = 1'b1;

assign start_for_writeC_U0_din = 1'b1;

assign tn_loop_proc_U0_ap_continue = 1'b1;

assign tn_loop_proc_U0_ap_start = start_for_tn_loop_proc_U0_empty_n;

assign writeC_U0_ap_continue = ap_continue;

assign writeC_U0_ap_start = start_for_writeC_U0_empty_n;

assign writehfifo_U0_ap_continue = 1'b1;

assign writehfifo_U0_ap_start = (a_cache_t_empty_n & a_cache_5_t_empty_n & a_cache_4_t_empty_n & a_cache_3_t_empty_n & a_cache_2_t_empty_n & a_cache_1_t_empty_n);

assign writevfifo_U0_ap_continue = 1'b1;

assign writevfifo_U0_ap_start = (b_cache_t_empty_n & b_cache_5_t_empty_n & b_cache_4_t_empty_n & b_cache_3_t_empty_n & b_cache_2_t_empty_n & b_cache_1_t_empty_n);

endmodule //tiled_mm_mm_mult_systolic
