// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module tiled_mm_readB (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_port_b_AWVALID,
        m_axi_port_b_AWREADY,
        m_axi_port_b_AWADDR,
        m_axi_port_b_AWID,
        m_axi_port_b_AWLEN,
        m_axi_port_b_AWSIZE,
        m_axi_port_b_AWBURST,
        m_axi_port_b_AWLOCK,
        m_axi_port_b_AWCACHE,
        m_axi_port_b_AWPROT,
        m_axi_port_b_AWQOS,
        m_axi_port_b_AWREGION,
        m_axi_port_b_AWUSER,
        m_axi_port_b_WVALID,
        m_axi_port_b_WREADY,
        m_axi_port_b_WDATA,
        m_axi_port_b_WSTRB,
        m_axi_port_b_WLAST,
        m_axi_port_b_WID,
        m_axi_port_b_WUSER,
        m_axi_port_b_ARVALID,
        m_axi_port_b_ARREADY,
        m_axi_port_b_ARADDR,
        m_axi_port_b_ARID,
        m_axi_port_b_ARLEN,
        m_axi_port_b_ARSIZE,
        m_axi_port_b_ARBURST,
        m_axi_port_b_ARLOCK,
        m_axi_port_b_ARCACHE,
        m_axi_port_b_ARPROT,
        m_axi_port_b_ARQOS,
        m_axi_port_b_ARREGION,
        m_axi_port_b_ARUSER,
        m_axi_port_b_RVALID,
        m_axi_port_b_RREADY,
        m_axi_port_b_RDATA,
        m_axi_port_b_RLAST,
        m_axi_port_b_RID,
        m_axi_port_b_RFIFONUM,
        m_axi_port_b_RUSER,
        m_axi_port_b_RRESP,
        m_axi_port_b_BVALID,
        m_axi_port_b_BREADY,
        m_axi_port_b_BRESP,
        m_axi_port_b_BID,
        m_axi_port_b_BUSER,
        b,
        b_cache_0_address0,
        b_cache_0_ce0,
        b_cache_0_we0,
        b_cache_0_d0,
        b_cache_1_address0,
        b_cache_1_ce0,
        b_cache_1_we0,
        b_cache_1_d0,
        b_cache_2_address0,
        b_cache_2_ce0,
        b_cache_2_we0,
        b_cache_2_d0,
        b_cache_3_address0,
        b_cache_3_ce0,
        b_cache_3_we0,
        b_cache_3_d0,
        b_cache_4_address0,
        b_cache_4_ce0,
        b_cache_4_we0,
        b_cache_4_d0,
        b_cache_5_address0,
        b_cache_5_ce0,
        b_cache_5_we0,
        b_cache_5_d0,
        tn,
        tn_c_din,
        tn_c_num_data_valid,
        tn_c_fifo_cap,
        tn_c_full_n,
        tn_c_write
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_port_b_AWVALID;
input   m_axi_port_b_AWREADY;
output  [63:0] m_axi_port_b_AWADDR;
output  [0:0] m_axi_port_b_AWID;
output  [31:0] m_axi_port_b_AWLEN;
output  [2:0] m_axi_port_b_AWSIZE;
output  [1:0] m_axi_port_b_AWBURST;
output  [1:0] m_axi_port_b_AWLOCK;
output  [3:0] m_axi_port_b_AWCACHE;
output  [2:0] m_axi_port_b_AWPROT;
output  [3:0] m_axi_port_b_AWQOS;
output  [3:0] m_axi_port_b_AWREGION;
output  [0:0] m_axi_port_b_AWUSER;
output   m_axi_port_b_WVALID;
input   m_axi_port_b_WREADY;
output  [7:0] m_axi_port_b_WDATA;
output  [0:0] m_axi_port_b_WSTRB;
output   m_axi_port_b_WLAST;
output  [0:0] m_axi_port_b_WID;
output  [0:0] m_axi_port_b_WUSER;
output   m_axi_port_b_ARVALID;
input   m_axi_port_b_ARREADY;
output  [63:0] m_axi_port_b_ARADDR;
output  [0:0] m_axi_port_b_ARID;
output  [31:0] m_axi_port_b_ARLEN;
output  [2:0] m_axi_port_b_ARSIZE;
output  [1:0] m_axi_port_b_ARBURST;
output  [1:0] m_axi_port_b_ARLOCK;
output  [3:0] m_axi_port_b_ARCACHE;
output  [2:0] m_axi_port_b_ARPROT;
output  [3:0] m_axi_port_b_ARQOS;
output  [3:0] m_axi_port_b_ARREGION;
output  [0:0] m_axi_port_b_ARUSER;
input   m_axi_port_b_RVALID;
output   m_axi_port_b_RREADY;
input  [7:0] m_axi_port_b_RDATA;
input   m_axi_port_b_RLAST;
input  [0:0] m_axi_port_b_RID;
input  [10:0] m_axi_port_b_RFIFONUM;
input  [0:0] m_axi_port_b_RUSER;
input  [1:0] m_axi_port_b_RRESP;
input   m_axi_port_b_BVALID;
output   m_axi_port_b_BREADY;
input  [1:0] m_axi_port_b_BRESP;
input  [0:0] m_axi_port_b_BID;
input  [0:0] m_axi_port_b_BUSER;
input  [63:0] b;
output  [7:0] b_cache_0_address0;
output   b_cache_0_ce0;
output   b_cache_0_we0;
output  [511:0] b_cache_0_d0;
output  [7:0] b_cache_1_address0;
output   b_cache_1_ce0;
output   b_cache_1_we0;
output  [511:0] b_cache_1_d0;
output  [7:0] b_cache_2_address0;
output   b_cache_2_ce0;
output   b_cache_2_we0;
output  [511:0] b_cache_2_d0;
output  [7:0] b_cache_3_address0;
output   b_cache_3_ce0;
output   b_cache_3_we0;
output  [511:0] b_cache_3_d0;
output  [7:0] b_cache_4_address0;
output   b_cache_4_ce0;
output   b_cache_4_we0;
output  [511:0] b_cache_4_d0;
output  [7:0] b_cache_5_address0;
output   b_cache_5_ce0;
output   b_cache_5_we0;
output  [511:0] b_cache_5_d0;
input  [2:0] tn;
output  [2:0] tn_c_din;
input  [2:0] tn_c_num_data_valid;
input  [2:0] tn_c_fifo_cap;
input   tn_c_full_n;
output   tn_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_port_b_ARVALID;
reg m_axi_port_b_RREADY;
reg b_cache_0_ce0;
reg b_cache_0_we0;
reg b_cache_1_ce0;
reg b_cache_1_we0;
reg b_cache_2_ce0;
reg b_cache_2_we0;
reg b_cache_3_ce0;
reg b_cache_3_we0;
reg b_cache_4_ce0;
reg b_cache_4_we0;
reg b_cache_5_ce0;
reg b_cache_5_we0;
reg tn_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    tn_c_blk_n;
reg    ap_block_state1;
wire   [10:0] mul9_fu_263_p2;
reg   [10:0] mul9_reg_454;
wire   [10:0] add_ln147_fu_293_p2;
reg   [10:0] add_ln147_reg_462;
wire    ap_CS_fsm_state2;
wire   [6:0] select_ln147_fu_317_p3;
reg   [6:0] select_ln147_reg_467;
wire   [3:0] select_ln147_1_fu_325_p3;
reg   [3:0] select_ln147_1_reg_475;
wire   [9:0] mul_mid2_fu_339_p3;
reg   [9:0] mul_mid2_reg_482;
wire    ap_CS_fsm_state3;
reg   [4:0] tmp_1_reg_487;
wire    ap_CS_fsm_state12;
wire   [2:0] grp_fu_333_p2;
reg   [2:0] urem_ln149_reg_492;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_ap_start;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_ap_done;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_ap_idle;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_ap_ready;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWVALID;
wire   [63:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWADDR;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWID;
wire   [31:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWLEN;
wire   [2:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWSIZE;
wire   [1:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWBURST;
wire   [1:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWLOCK;
wire   [3:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWCACHE;
wire   [2:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWPROT;
wire   [3:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWQOS;
wire   [3:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWREGION;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWUSER;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WVALID;
wire   [7:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WDATA;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WSTRB;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WLAST;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WID;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WUSER;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARVALID;
wire   [63:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARADDR;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARID;
wire   [31:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARLEN;
wire   [2:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARSIZE;
wire   [1:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARBURST;
wire   [1:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARLOCK;
wire   [3:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARCACHE;
wire   [2:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARPROT;
wire   [3:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARQOS;
wire   [3:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARREGION;
wire   [0:0] grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARUSER;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_RREADY;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_BREADY;
wire   [511:0] grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;
wire    grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out_ap_vld;
reg    grp_readB_Pipeline_rb_b_pack_fu_228_ap_start_reg;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln156_1_fu_391_p1;
wire    ap_CS_fsm_state13;
reg   [6:0] n_fu_114;
wire   [6:0] n_3_fu_404_p2;
wire   [0:0] icmp_ln147_fu_287_p2;
reg   [3:0] i_fu_118;
reg   [10:0] indvar_flatten_fu_122;
wire   [2:0] trunc_ln156_fu_401_p1;
wire   [9:0] p_shl_fu_239_p3;
wire   [7:0] p_shl1_fu_251_p3;
wire   [10:0] p_shl_cast4_fu_247_p1;
wire   [10:0] p_shl1_cast5_fu_259_p1;
wire   [0:0] icmp_ln149_fu_311_p2;
wire   [3:0] i_6_fu_305_p2;
wire   [6:0] grp_fu_333_p0;
wire   [3:0] grp_fu_333_p1;
wire   [6:0] mul_ln149_fu_350_p0;
wire   [8:0] mul_ln149_fu_350_p1;
wire   [14:0] mul_ln149_fu_350_p2;
wire   [7:0] tmp_fu_366_p3;
wire   [7:0] zext_ln156_fu_382_p1;
wire   [7:0] add_ln156_fu_385_p2;
reg    grp_fu_333_ap_start;
wire    grp_fu_333_ap_done;
reg    grp_fu_333_ce;
reg   [12:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire   [14:0] mul_ln149_fu_350_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 13'd1;
#0 grp_readB_Pipeline_rb_b_pack_fu_228_ap_start_reg = 1'b0;
#0 n_fu_114 = 7'd0;
#0 i_fu_118 = 4'd0;
#0 indvar_flatten_fu_122 = 11'd0;
end

tiled_mm_readB_Pipeline_rb_b_pack grp_readB_Pipeline_rb_b_pack_fu_228(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_readB_Pipeline_rb_b_pack_fu_228_ap_start),
    .ap_done(grp_readB_Pipeline_rb_b_pack_fu_228_ap_done),
    .ap_idle(grp_readB_Pipeline_rb_b_pack_fu_228_ap_idle),
    .ap_ready(grp_readB_Pipeline_rb_b_pack_fu_228_ap_ready),
    .m_axi_port_b_AWVALID(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWVALID),
    .m_axi_port_b_AWREADY(1'b0),
    .m_axi_port_b_AWADDR(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWADDR),
    .m_axi_port_b_AWID(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWID),
    .m_axi_port_b_AWLEN(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWLEN),
    .m_axi_port_b_AWSIZE(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWSIZE),
    .m_axi_port_b_AWBURST(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWBURST),
    .m_axi_port_b_AWLOCK(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWLOCK),
    .m_axi_port_b_AWCACHE(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWCACHE),
    .m_axi_port_b_AWPROT(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWPROT),
    .m_axi_port_b_AWQOS(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWQOS),
    .m_axi_port_b_AWREGION(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWREGION),
    .m_axi_port_b_AWUSER(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_AWUSER),
    .m_axi_port_b_WVALID(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WVALID),
    .m_axi_port_b_WREADY(1'b0),
    .m_axi_port_b_WDATA(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WDATA),
    .m_axi_port_b_WSTRB(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WSTRB),
    .m_axi_port_b_WLAST(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WLAST),
    .m_axi_port_b_WID(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WID),
    .m_axi_port_b_WUSER(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_WUSER),
    .m_axi_port_b_ARVALID(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARVALID),
    .m_axi_port_b_ARREADY(m_axi_port_b_ARREADY),
    .m_axi_port_b_ARADDR(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARADDR),
    .m_axi_port_b_ARID(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARID),
    .m_axi_port_b_ARLEN(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARLEN),
    .m_axi_port_b_ARSIZE(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARSIZE),
    .m_axi_port_b_ARBURST(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARBURST),
    .m_axi_port_b_ARLOCK(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARLOCK),
    .m_axi_port_b_ARCACHE(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARCACHE),
    .m_axi_port_b_ARPROT(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARPROT),
    .m_axi_port_b_ARQOS(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARQOS),
    .m_axi_port_b_ARREGION(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARREGION),
    .m_axi_port_b_ARUSER(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARUSER),
    .m_axi_port_b_RVALID(m_axi_port_b_RVALID),
    .m_axi_port_b_RREADY(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_RREADY),
    .m_axi_port_b_RDATA(m_axi_port_b_RDATA),
    .m_axi_port_b_RLAST(m_axi_port_b_RLAST),
    .m_axi_port_b_RID(m_axi_port_b_RID),
    .m_axi_port_b_RFIFONUM(m_axi_port_b_RFIFONUM),
    .m_axi_port_b_RUSER(m_axi_port_b_RUSER),
    .m_axi_port_b_RRESP(m_axi_port_b_RRESP),
    .m_axi_port_b_BVALID(1'b0),
    .m_axi_port_b_BREADY(grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_BREADY),
    .m_axi_port_b_BRESP(2'd0),
    .m_axi_port_b_BID(1'd0),
    .m_axi_port_b_BUSER(1'd0),
    .mul_mid2(mul_mid2_reg_482),
    .b(b),
    .mul9(mul9_reg_454),
    .zext_ln149(select_ln147_reg_467),
    .b_line_02_out(grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out),
    .b_line_02_out_ap_vld(grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out_ap_vld)
);

tiled_mm_urem_7ns_4ns_3_11_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_7ns_4ns_3_11_seq_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_333_ap_start),
    .done(grp_fu_333_ap_done),
    .din0(grp_fu_333_p0),
    .din1(grp_fu_333_p1),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

tiled_mm_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U37(
    .din0(mul_ln149_fu_350_p0),
    .din1(mul_ln149_fu_350_p1),
    .dout(mul_ln149_fu_350_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln147_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_readB_Pipeline_rb_b_pack_fu_228_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_readB_Pipeline_rb_b_pack_fu_228_ap_start_reg <= 1'b1;
        end else if ((grp_readB_Pipeline_rb_b_pack_fu_228_ap_ready == 1'b1)) begin
            grp_readB_Pipeline_rb_b_pack_fu_228_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        i_fu_118 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i_fu_118 <= select_ln147_1_reg_475;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        indvar_flatten_fu_122 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten_fu_122 <= add_ln147_reg_462;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        n_fu_114 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        n_fu_114 <= n_3_fu_404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln147_reg_462 <= add_ln147_fu_293_p2;
        select_ln147_1_reg_475 <= select_ln147_1_fu_325_p3;
        select_ln147_reg_467 <= select_ln147_fu_317_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mul9_reg_454[10 : 5] <= mul9_fu_263_p2[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_mid2_reg_482[9 : 6] <= mul_mid2_fu_339_p3[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_1_reg_487 <= {{mul_ln149_fu_350_p2[14:10]}};
        urem_ln149_reg_492 <= grp_fu_333_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_readB_Pipeline_rb_b_pack_fu_228_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln147_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln147_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_cache_0_ce0 = 1'b1;
    end else begin
        b_cache_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln156_fu_401_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        b_cache_0_we0 = 1'b1;
    end else begin
        b_cache_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_cache_1_ce0 = 1'b1;
    end else begin
        b_cache_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln156_fu_401_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        b_cache_1_we0 = 1'b1;
    end else begin
        b_cache_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_cache_2_ce0 = 1'b1;
    end else begin
        b_cache_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln156_fu_401_p1 == 3'd2) & (1'b1 == ap_CS_fsm_state13))) begin
        b_cache_2_we0 = 1'b1;
    end else begin
        b_cache_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_cache_3_ce0 = 1'b1;
    end else begin
        b_cache_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln156_fu_401_p1 == 3'd3) & (1'b1 == ap_CS_fsm_state13))) begin
        b_cache_3_we0 = 1'b1;
    end else begin
        b_cache_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_cache_4_ce0 = 1'b1;
    end else begin
        b_cache_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln156_fu_401_p1 == 3'd4) & (1'b1 == ap_CS_fsm_state13))) begin
        b_cache_4_we0 = 1'b1;
    end else begin
        b_cache_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_cache_5_ce0 = 1'b1;
    end else begin
        b_cache_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln156_fu_401_p1 == 3'd0) & ~(trunc_ln156_fu_401_p1 == 3'd1) & ~(trunc_ln156_fu_401_p1 == 3'd2) & ~(trunc_ln156_fu_401_p1 == 3'd3) & ~(trunc_ln156_fu_401_p1 == 3'd4) & (1'b1 == ap_CS_fsm_state13))) begin
        b_cache_5_we0 = 1'b1;
    end else begin
        b_cache_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln147_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_333_ap_start = 1'b1;
    end else begin
        grp_fu_333_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_333_ce = 1'b0;
    end else begin
        grp_fu_333_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_port_b_ARVALID = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARVALID;
    end else begin
        m_axi_port_b_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_port_b_RREADY = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_RREADY;
    end else begin
        m_axi_port_b_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tn_c_blk_n = tn_c_full_n;
    end else begin
        tn_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        tn_c_write = 1'b1;
    end else begin
        tn_c_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln147_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_readB_Pipeline_rb_b_pack_fu_228_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln147_fu_293_p2 = (indvar_flatten_fu_122 + 11'd1);

assign add_ln156_fu_385_p2 = (tmp_fu_366_p3 + zext_ln156_fu_382_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (tn_c_full_n == 1'b0));
end

assign b_cache_0_address0 = zext_ln156_1_fu_391_p1;

assign b_cache_0_d0 = grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;

assign b_cache_1_address0 = zext_ln156_1_fu_391_p1;

assign b_cache_1_d0 = grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;

assign b_cache_2_address0 = zext_ln156_1_fu_391_p1;

assign b_cache_2_d0 = grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;

assign b_cache_3_address0 = zext_ln156_1_fu_391_p1;

assign b_cache_3_d0 = grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;

assign b_cache_4_address0 = zext_ln156_1_fu_391_p1;

assign b_cache_4_d0 = grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;

assign b_cache_5_address0 = zext_ln156_1_fu_391_p1;

assign b_cache_5_d0 = grp_readB_Pipeline_rb_b_pack_fu_228_b_line_02_out;

assign grp_fu_333_p0 = ((icmp_ln149_fu_311_p2[0:0] == 1'b1) ? 7'd0 : n_fu_114);

assign grp_fu_333_p1 = 7'd6;

assign grp_readB_Pipeline_rb_b_pack_fu_228_ap_start = grp_readB_Pipeline_rb_b_pack_fu_228_ap_start_reg;

assign i_6_fu_305_p2 = (i_fu_118 + 4'd1);

assign icmp_ln147_fu_287_p2 = ((indvar_flatten_fu_122 == 11'd1152) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_311_p2 = ((n_fu_114 == 7'd96) ? 1'b1 : 1'b0);

assign m_axi_port_b_ARADDR = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARADDR;

assign m_axi_port_b_ARBURST = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARBURST;

assign m_axi_port_b_ARCACHE = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARCACHE;

assign m_axi_port_b_ARID = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARID;

assign m_axi_port_b_ARLEN = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARLEN;

assign m_axi_port_b_ARLOCK = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARLOCK;

assign m_axi_port_b_ARPROT = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARPROT;

assign m_axi_port_b_ARQOS = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARQOS;

assign m_axi_port_b_ARREGION = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARREGION;

assign m_axi_port_b_ARSIZE = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARSIZE;

assign m_axi_port_b_ARUSER = grp_readB_Pipeline_rb_b_pack_fu_228_m_axi_port_b_ARUSER;

assign m_axi_port_b_AWADDR = 64'd0;

assign m_axi_port_b_AWBURST = 2'd0;

assign m_axi_port_b_AWCACHE = 4'd0;

assign m_axi_port_b_AWID = 1'd0;

assign m_axi_port_b_AWLEN = 32'd0;

assign m_axi_port_b_AWLOCK = 2'd0;

assign m_axi_port_b_AWPROT = 3'd0;

assign m_axi_port_b_AWQOS = 4'd0;

assign m_axi_port_b_AWREGION = 4'd0;

assign m_axi_port_b_AWSIZE = 3'd0;

assign m_axi_port_b_AWUSER = 1'd0;

assign m_axi_port_b_AWVALID = 1'b0;

assign m_axi_port_b_BREADY = 1'b0;

assign m_axi_port_b_WDATA = 8'd0;

assign m_axi_port_b_WID = 1'd0;

assign m_axi_port_b_WLAST = 1'b0;

assign m_axi_port_b_WSTRB = 1'd0;

assign m_axi_port_b_WUSER = 1'd0;

assign m_axi_port_b_WVALID = 1'b0;

assign mul9_fu_263_p2 = (p_shl_cast4_fu_247_p1 - p_shl1_cast5_fu_259_p1);

assign mul_ln149_fu_350_p0 = mul_ln149_fu_350_p00;

assign mul_ln149_fu_350_p00 = select_ln147_reg_467;

assign mul_ln149_fu_350_p1 = 15'd171;

assign mul_mid2_fu_339_p3 = {{select_ln147_1_reg_475}, {6'd0}};

assign n_3_fu_404_p2 = (select_ln147_reg_467 + 7'd1);

assign p_shl1_cast5_fu_259_p1 = p_shl1_fu_251_p3;

assign p_shl1_fu_251_p3 = {{tn}, {5'd0}};

assign p_shl_cast4_fu_247_p1 = p_shl_fu_239_p3;

assign p_shl_fu_239_p3 = {{tn}, {7'd0}};

assign select_ln147_1_fu_325_p3 = ((icmp_ln149_fu_311_p2[0:0] == 1'b1) ? i_6_fu_305_p2 : i_fu_118);

assign select_ln147_fu_317_p3 = ((icmp_ln149_fu_311_p2[0:0] == 1'b1) ? 7'd0 : n_fu_114);

assign tmp_fu_366_p3 = {{select_ln147_1_reg_475}, {4'd0}};

assign tn_c_din = tn;

assign trunc_ln156_fu_401_p1 = urem_ln149_reg_492[2:0];

assign zext_ln156_1_fu_391_p1 = add_ln156_fu_385_p2;

assign zext_ln156_fu_382_p1 = tmp_1_reg_487;

always @ (posedge ap_clk) begin
    mul9_reg_454[4:0] <= 5'b00000;
    mul_mid2_reg_482[5:0] <= 6'b000000;
end

endmodule //tiled_mm_readB
